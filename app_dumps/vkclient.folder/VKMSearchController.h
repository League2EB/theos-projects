/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "UISearchDisplayDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "VKClient-Structs.h"
#import "UITableViewDelegate.h"
#import "UITableViewDataSource.h"

@class NSOperationQueue, ReusableViewsPool, LoadingFooterView, ScrollSpeed, NSString, NSArray;
@protocol VKMSearchControllerDelegate, VKMNavDelegate;

__attribute__((visibility("hidden")))
@interface VKMSearchController : XXUnknownSuperclass <UISearchDisplayDelegate, UITableViewDataSource, UITableViewDelegate> {
	BOOL disableInsetFixForIOS7;
	NSOperationQueue* _queue;
	NSArray* _results;
	ScrollSpeed* _speed;
	LoadingFooterView* _footer;
	id<VKMNavDelegate, VKMSearchControllerDelegate> _searchDelegate;
	ReusableViewsPool* _reusableViewsPool;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(readonly, retain, nonatomic) ReusableViewsPool* reusableViewsPool;
@property(assign, nonatomic) __weak id<VKMNavDelegate, VKMSearchControllerDelegate> searchDelegate;
@property(retain, nonatomic) LoadingFooterView* footer;
@property(readonly, retain, nonatomic) ScrollSpeed* speed;
@property(retain, nonatomic) NSArray* results;
@property(readonly, retain, nonatomic) NSOperationQueue* queue;
-(void).cxx_destruct;
-(void)tableView:(id)view didSelectRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;
-(int)tableView:(id)view numberOfRowsInSection:(int)section;
-(void)searchDisplayControllerDidEndSearch:(id)searchDisplayController;
-(void)searchDisplayControllerWillEndSearch:(id)searchDisplayController;
-(void)searchDisplayControllerWillBeginSearch:(id)searchDisplayController;
-(void)searchDisplayController:(id)controller willUnloadSearchResultsTableView:(id)view;
-(void)searchDisplayController:(id)controller didLoadSearchResultsTableView:(id)view;
-(BOOL)searchDisplayController:(id)controller shouldReloadTableForSearchString:(id)searchString;
-(void)scrollViewDidScroll:(id)scrollView;
-(void)customizeSearchBar:(id)bar;
-(void)dealloc;
-(id)initWithSearchBar:(id)searchBar contentsController:(id)controller;
@end

