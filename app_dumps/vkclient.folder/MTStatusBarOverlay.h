/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "VKClient-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "UITableViewDataSource.h"

@class UITableView, UITextView, UIImage, NSMutableArray, UILabel, UIView, UIImageView, UIViewController, NSString, UIActivityIndicatorView;
@protocol MTStatusBarOverlayDelegate;

__attribute__((visibility("hidden")))
@interface MTStatusBarOverlay : XXUnknownSuperclass <UITableViewDataSource> {
	BOOL hidesActivity_;
	BOOL hideInProgress_;
	BOOL active_;
	BOOL canRemoveImmediateMessagesFromQueue_;
	BOOL forcedToHide_;
	UIView* backgroundView_;
	UIView* detailView_;
	UIImageView* statusBarBackgroundImageView_;
	UILabel* statusLabel1_;
	UILabel* statusLabel2_;
	UILabel* hiddenStatusLabel_;
	UIImageView* progressView_;
	UIActivityIndicatorView* activityIndicator_;
	UILabel* finishedLabel_;
	UIImage* defaultStatusBarImage_;
	UIImage* defaultStatusBarImageShrinked_;
	int animation_;
	NSMutableArray* messageQueue_;
	int detailViewMode_;
	NSString* detailText_;
	UITextView* detailTextView_;
	NSMutableArray* messageHistory_;
	UITableView* historyTableView_;
	NSString* lastPostedMessage_;
	id<MTStatusBarOverlayDelegate> _overlayDelegate;
	UIViewController* _realRootController;
	double progress_;
	CGRect smallFrame_;
	CGRect oldBackgroundViewFrame_;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) id<MTStatusBarOverlayDelegate> overlayDelegate;
@property(copy, nonatomic) NSString* detailText;
@property(assign, nonatomic) int detailViewMode;
@property(assign, nonatomic) BOOL canRemoveImmediateMessagesFromQueue;
@property(copy, nonatomic) NSString* lastPostedMessage;
@property(assign, nonatomic, getter=isHistoryEnabled) BOOL historyEnabled;
@property(readonly, assign, nonatomic, getter=isDetailViewHidden) BOOL detailViewHidden;
@property(readonly, assign, nonatomic, getter=isShrinked) BOOL shrinked;
@property(retain, nonatomic) UIImage* defaultStatusBarImageShrinked;
@property(retain, nonatomic) UIImage* defaultStatusBarImage;
@property(assign, nonatomic) BOOL hidesActivity;
@property(retain, nonatomic) UILabel* finishedLabel;
@property(assign, nonatomic) int animation;
@property(assign, nonatomic) CGRect smallFrame;
@property(assign, nonatomic) double progress;
@property(retain, nonatomic) UIView* detailView;
@property(retain, nonatomic) UIView* backgroundView;
@property(retain, nonatomic) UIViewController* realRootController;
@property(assign, nonatomic) BOOL forcedToHide;
@property(retain, nonatomic) UITableView* historyTableView;
@property(retain, nonatomic) NSMutableArray* messageHistory;
@property(retain, nonatomic) NSMutableArray* messageQueue;
@property(retain, nonatomic) UITextView* detailTextView;
@property(readonly, assign, nonatomic, getter=isReallyHidden) BOOL reallyHidden;
@property(assign, getter=isActive) BOOL active;
@property(assign, getter=isHideInProgress) BOOL hideInProgress;
@property(assign, nonatomic) CGRect oldBackgroundViewFrame;
@property(retain, nonatomic) UIImageView* progressView;
@property(readonly, assign, nonatomic) UILabel* visibleStatusLabel;
@property(assign, nonatomic) UILabel* hiddenStatusLabel;
@property(retain, nonatomic) UILabel* statusLabel2;
@property(retain, nonatomic) UILabel* statusLabel1;
@property(retain, nonatomic) UIImageView* statusBarBackgroundImageView;
@property(retain, nonatomic) UIActivityIndicatorView* activityIndicator;
+(id)sharedOverlay;
+(id)sharedInstance;
-(void).cxx_destruct;
-(void)setHidden:(BOOL)hidden useAlpha:(BOOL)alpha;
-(void)setHiddenUsingAlpha:(BOOL)alpha;
-(void)clearHistory;
-(void)addMessageToHistory:(id)history;
-(CGRect)backgroundViewFrameForStatusBarInterfaceOrientation;
-(void)updateProgressViewSizeForLabel:(id)label;
-(void)updateDetailTextViewHeight;
-(void)callDelegateWithNewMessage:(id)newMessage;
-(void)updateUIForMessageType:(int)messageType duration:(double)duration;
-(void)setColorSchemeForStatusBarStyle:(int)statusBarStyle messageType:(int)type;
-(void)setStatusBarBackgroundForStyle:(int)style;
-(void)applicationDidBecomeActive:(id)application;
-(void)applicationWillResignActive:(id)application;
-(void)contentViewSwipedDown:(id)down;
-(void)contentViewSwipedUp:(id)up;
-(void)contentViewClicked:(id)clicked;
-(id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;
-(int)tableView:(id)view numberOfRowsInSection:(int)section;
-(void)setDetailViewHidden:(BOOL)hidden animated:(BOOL)animated;
-(void)setShrinked:(BOOL)shrinked animated:(BOOL)animated;
-(void)rotateToStatusBarFrame:(id)statusBarFrame;
-(void)setupFrame;
-(void)didChangeStatusBarFrame:(id)frame;
-(void)show;
-(void)hideTemporary;
-(void)hide;
-(void)showNextMessage;
-(void)postImmediateMessage:(id)message type:(int)type duration:(double)duration animated:(BOOL)animated;
-(void)postMessage:(id)message type:(int)type duration:(double)duration animated:(BOOL)animated immediate:(BOOL)immediate;
-(void)postMessageDictionary:(id)dictionary;
-(void)postImmediateErrorMessage:(id)message duration:(double)duration animated:(BOOL)animated;
-(void)postErrorMessage:(id)message duration:(double)duration animated:(BOOL)animated;
-(void)postErrorMessage:(id)message duration:(double)duration;
-(void)postImmediateFinishMessage:(id)message duration:(double)duration animated:(BOOL)animated;
-(void)postFinishMessage:(id)message duration:(double)duration animated:(BOOL)animated;
-(void)postFinishMessage:(id)message duration:(double)duration;
-(void)postImmediateMessage:(id)message duration:(double)duration animated:(BOOL)animated;
-(void)postImmediateMessage:(id)message duration:(double)duration;
-(void)postImmediateMessage:(id)message animated:(BOOL)animated;
-(void)postMessage:(id)message duration:(double)duration animated:(BOOL)animated;
-(void)postMessage:(id)message duration:(double)duration;
-(void)postMessage:(id)message animated:(BOOL)animated;
-(void)postMessage:(id)message;
-(void)restoreState;
-(void)saveStateSynchronized:(BOOL)synchronized;
-(void)saveState;
-(void)addSubviewToBackgroundView:(id)backgroundView atIndex:(int)index;
-(void)addSubviewToBackgroundView:(id)backgroundView;
-(void)dealloc;
-(id)hitTest:(CGPoint)test withEvent:(id)event;
-(void)setHidden:(BOOL)hidden;
-(void)setRootViewController:(id)controller;
-(id)initWithFrame:(CGRect)frame;
-(void)becomeKeyWindow;
@end

