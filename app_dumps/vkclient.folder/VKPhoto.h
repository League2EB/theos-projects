/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "VKBrowsableImage.h"
#import "VKSourceStatus.h"
#import "vkclient-Structs.h"
#import "VKDomain.h"

@class VKText, VKPhotoTags, VKUser, VKPhotoDetails, NSMutableDictionary, NSString, NSNumber;

__attribute__((visibility("hidden")))
@interface VKPhoto : VKDomain <VKBrowsableImage, VKSourceStatus> {
	BOOL _can_edit;
	BOOL _hidden;
	BOOL _hasPhotoSizes;
	NSMutableDictionary* _variants;
	float _ratio;
	NSNumber* _aid;
	NSNumber* _user_id;
	VKText* _text;
	unsigned _date;
	NSNumber* _post_id;
	VKPhotoDetails* _details;
	VKPhotoTags* _tags;
	NSNumber* _can_repost;
	NSNumber* _can_comment;
	NSNumber* _real_offset;
	VKUser* _author;
	CGRect _profilePhotoRect;
	CGRect _listPhotoRect;
	CGRect _listPhotoRectConverted;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) VKUser* author;
@property(readonly, assign, nonatomic) BOOL hasPhotoSizes;
@property(assign, nonatomic) CGRect listPhotoRectConverted;
@property(assign, nonatomic) CGRect listPhotoRect;
@property(assign, nonatomic) CGRect profilePhotoRect;
@property(assign, nonatomic) BOOL hidden;
@property(retain, nonatomic) NSNumber* real_offset;
@property(assign, nonatomic) BOOL can_edit;
@property(retain, nonatomic) NSNumber* can_comment;
@property(retain, nonatomic) NSNumber* can_repost;
@property(retain, nonatomic) VKPhotoTags* tags;
@property(retain, nonatomic) VKPhotoDetails* details;
@property(retain, nonatomic) NSNumber* post_id;
@property(assign, nonatomic) unsigned date;
@property(retain, nonatomic) VKText* text;
@property(retain, nonatomic) NSNumber* user_id;
@property(retain, nonatomic) NSNumber* aid;
@property(assign, nonatomic) float ratio;
@property(retain, nonatomic) NSMutableDictionary* variants;
+(id)pendingUploadPhoto:(float)photo;
+(id)fakePhoto:(id)photo size:(CGSize)size;
+(id)fakePhoto:(id)photo;
+(id)placeholderPhoto;
+(void)load;
-(BOOL)isVideo;
-(int)statusMask;
-(id)statusForSource:(id)source;
-(id)messagesPlaceholder;
-(id)messagesFilterForSize:(CGSize)size isFirst:(BOOL)first isLast:(BOOL)last;
-(XXStruct_UOIMaD)messagesRenderType;
-(BOOL)forceZoom;
-(int)pickSizeForRatio:(float)ratio width:(float)width height:(float)height;
-(id)pickVariantForSize:(CGSize)size;
-(id)pickVariantForSize:(CGSize)size scale:(float)scale;
-(id)messagesVariant;
-(id)fullVariant;
-(int)fullVariantType;
-(id)thumbnailVariant;
-(id)thumbnailUrl;
-(id)companionPostIdentity;
-(BOOL)isPlaceholderPhoto;
-(void)updatePermissionsData:(id)data;
-(BOOL)process:(id)process context:(id)context;
-(void)domainOnEditCopy:(id)copy;
-(id)init;
-(BOOL)isEqual:(id)equal;
-(void)dealloc;
@end

