/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "ModelRenderDelegate.h"
#import "VKMSearchController.h"
#import "ModelObserver.h"
#import "vkclient-Structs.h"

@class NSMutableArray, NSObject, NSString, LoadingModel;
@protocol VKMNavDelegate, SearchModel, VKMLiveSearchControllerDelegate;

__attribute__((visibility("hidden")))
@interface VKMLiveSearchController : VKMSearchController <ModelObserver, ModelRenderDelegate> {
	NSString* _query;
	LoadingModel<SearchModel>* _model;
	Class _operationClass;
	NSMutableArray* _cells;
	int _renderContext;
	NSObject* _searchDelayMarker;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) id<VKMNavDelegate, VKMLiveSearchControllerDelegate> searchDelegate;
@property(assign, nonatomic) int renderContext;
@property(retain, nonatomic) NSMutableArray* cells;
@property(retain, nonatomic) Class operationClass;
@property(retain, nonatomic) NSString* query;
@property(retain, nonatomic) NSObject* searchDelayMarker;
@property(retain, nonatomic) LoadingModel<SearchModel>* model;
-(int)tableView:(id)view editingStyleForRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view didDeselectRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view didSelectRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view willDisplayCell:(id)cell forRowAtIndexPath:(id)indexPath;
-(BOOL)tableView:(id)view shouldIndentWhileEditingRowAtIndexPath:(id)indexPath;
-(BOOL)tableView:(id)view canEditRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;
-(float)tableView:(id)view heightForRowAtIndexPath:(id)indexPath;
-(id)objectAtIndexPath:(id)indexPath;
-(id)tableView:(id)view titleForHeaderInSection:(int)section;
-(int)tableView:(id)view numberOfRowsInSection:(int)section;
-(int)numberOfSectionsInTableView:(id)tableView;
-(void)windowWillAnimateRotation:(id)window;
-(void)searchDisplayControllerWillBeginSearch:(id)searchDisplayController;
-(void)searchDisplayControllerWillEndSearch:(id)searchDisplayController;
-(void)searchDisplayController:(id)controller willUnloadSearchResultsTableView:(id)view;
-(void)searchDisplayController:(id)controller willHideSearchResultsTableView:(id)view;
-(BOOL)searchDisplayController:(id)controller shouldReloadTableForSearchScope:(int)searchScope;
-(BOOL)searchDisplayController:(id)controller shouldReloadTableForSearchString:(id)searchString;
-(void)searchLocal:(id)local;
-(id)model:(id)model componentRenderContextForObject:(id)object context:(id)context;
-(id)model:(id)model componentForObject:(id)object withContext:(id)context;
-(id)renderContextForModel:(id)model;
-(id)model:(id)model renderObject:(id)object withContext:(id)context;
-(void)model:(id)model willStartLoadingWithContext:(id)context;
-(void)modelLoadingChanged:(id)changed;
-(void)model:(id)model updated:(id)updated;
-(void)indexUpdated;
-(void)updated;
-(void)cancel;
-(void)customizeSearchBar:(id)bar;
-(void)dropCells;
-(void)dealloc;
-(void)useSearchModel:(id)model;
-(id)initWithSearchBar:(id)searchBar contentsController:(id)controller;
@end

