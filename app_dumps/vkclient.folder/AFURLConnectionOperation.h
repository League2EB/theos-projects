/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library

@class NSError, NSRecursiveLock, NSSet, NSURLConnection, NSURLRequest, NSData, NSHTTPURLResponse, NSMutableData, NSOutputStream, NSString, NSURLResponse, NSInputStream;

__attribute__((visibility("hidden")))
@interface AFURLConnectionOperation : XXUnknownSuperclass {
	unsigned short _state;
	BOOL _cancelled;
	NSRecursiveLock* _lock;
	NSSet* _runLoopModes;
	NSURLConnection* _connection;
	NSURLRequest* _request;
	NSHTTPURLResponse* _response;
	NSError* _error;
	NSData* _responseData;
	int _totalBytesRead;
	NSMutableData* _dataAccumulator;
	NSOutputStream* _outputStream;
	NSString* _responseString;
	id _uploadProgress;
	id _downloadProgress;
	id _authenticationAgainstProtectionSpace;
	id _authenticationChallenge;
	id _cacheResponse;
}
@property(retain, nonatomic) NSOutputStream* outputStream;
@property(retain, nonatomic) NSInputStream* inputStream;
@property(retain, nonatomic) NSSet* runLoopModes;
@property(copy, nonatomic) id cacheResponse;
@property(copy, nonatomic) id authenticationChallenge;
@property(copy, nonatomic) id authenticationAgainstProtectionSpace;
@property(copy, nonatomic) id downloadProgress;
@property(copy, nonatomic) id uploadProgress;
@property(retain, nonatomic) NSMutableData* dataAccumulator;
@property(assign, nonatomic) int totalBytesRead;
@property(copy, nonatomic) NSString* responseString;
@property(retain, nonatomic) NSData* responseData;
@property(retain, nonatomic) NSError* error;
@property(retain, nonatomic) NSURLResponse* response;
@property(retain, nonatomic) NSURLRequest* request;
@property(retain, nonatomic) NSURLConnection* connection;
@property(retain, nonatomic) NSRecursiveLock* lock;
@property(assign, nonatomic) unsigned short state;
+(id)networkRequestThread;
+(void)networkRequestThreadEntryPoint:(id)point;
-(id)connection:(id)connection willCacheResponse:(id)response;
-(void)connection:(id)connection didFailWithError:(id)error;
-(void)connectionDidFinishLoading:(id)connection;
-(void)connection:(id)connection didReceiveData:(id)data;
-(void)connection:(id)connection didReceiveResponse:(id)response;
-(void)connection:(id)connection didSendBodyData:(int)data totalBytesWritten:(int)written totalBytesExpectedToWrite:(int)write;
-(void)connection:(id)connection didReceiveAuthenticationChallenge:(id)challenge;
-(BOOL)connection:(id)connection canAuthenticateAgainstProtectionSpace:(id)space;
-(void)cancelConnection;
-(void)cancel;
-(void)finish;
-(void)operationDidStart;
-(void)start;
-(BOOL)isConcurrent;
-(BOOL)isCancelled;
-(BOOL)isFinished;
-(BOOL)isExecuting;
-(BOOL)isReady;
-(void)setCacheResponseBlock:(id)block;
-(void)setAuthenticationChallengeBlock:(id)block;
-(void)setAuthenticationAgainstProtectionSpaceBlock:(id)block;
-(void)setDownloadProgressBlock:(id)block;
-(void)setUploadProgressBlock:(id)block;
-(void)setCompletionBlock:(id)block;
-(id)description;
-(void)dealloc;
-(id)initWithRequest:(id)request;
@end

