/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "vkclient-Structs.h"
#import "VKMController.h"

@class StoryFullscreenView, KVOObserver, NSTimer, NSString, NSArray;
@protocol StoryFullscreenViewModel, StoryFullscreenViewControllerDataSource, StoryFullscreenViewModelProvider, StoryFullscreenViewControllerDelegate;

__attribute__((visibility("hidden")))
@interface StoryFullscreenViewController : VKMController {
	BOOL _sendMessagePopupPresented;
	BOOL _controlsHidden;
	BOOL _playing;
	BOOL _didStartPlayingCurrentStory;
	NSString* _fromSource;
	id<StoryFullscreenViewControllerDelegate> _delegate;
	id<StoryFullscreenViewModelProvider> _viewModelProvider;
	id<StoryFullscreenViewControllerDataSource> _dataSource;
	NSArray* _storyIdens;
	int _currentIndex;
	id<StoryFullscreenViewModel> _viewModel;
	NSTimer* _currentStoryTimeTimer;
	KVOObserver* _videoPlayerObserver;
	KVOObserver* _viewModelObserver;
}
@property(assign, nonatomic) BOOL controlsHidden;
@property(assign, nonatomic) int currentIndex;
@property(assign, nonatomic) __weak id<StoryFullscreenViewControllerDataSource> dataSource;
@property(assign, nonatomic) __weak id<StoryFullscreenViewModelProvider> viewModelProvider;
@property(assign, nonatomic) __weak id<StoryFullscreenViewControllerDelegate> delegate;
@property(assign, nonatomic) NSString* fromSource;
@property(retain, nonatomic) StoryFullscreenView* view;
@property(assign, nonatomic) BOOL didStartPlayingCurrentStory;
@property(assign, nonatomic) BOOL sendMessagePopupPresented;
@property(assign, nonatomic) BOOL playing;
@property(retain, nonatomic) KVOObserver* viewModelObserver;
@property(retain, nonatomic) KVOObserver* videoPlayerObserver;
@property(retain, nonatomic) NSTimer* currentStoryTimeTimer;
@property(retain, nonatomic) id<StoryFullscreenViewModel> viewModel;
@property(copy, nonatomic) NSArray* storyIdens;
-(void).cxx_destruct;
-(void)handleStoryViewsCountChangedNotification:(id)notification;
-(void)handleStoryViewModelReloadNotification:(id)notification;
-(void)handlePlayerItemDidPlayToEndNotification:(id)handlePlayerItem;
-(void)saveStoryVideoToCameraRoll;
-(void)saveStoryPhotoToCameraRoll;
-(void)handleSaveToCameraRollAction;
-(void)handlePlaybackError:(id)error;
-(void)handleSwipeUpGesture:(id)gesture;
-(void)handleVideoErrorActionButtonTap;
-(void)handleRetryUploadButtonTap;
-(void)handleViewersCountButtonTap;
-(void)handleShareButtonTap;
-(void)handleMoreActionsButtonTap;
-(void)handleSendMessageButtonTap;
-(void)handleSourceViewTap;
-(void)handleCloseButton;
-(void)setControlsHidden:(BOOL)hidden animated:(BOOL)animated;
-(void)showSendMessageWithStoryController:(id)storyController dialog:(id)dialog emptyBodyAllowed:(BOOL)allowed inViewController:(id)viewController completion:(id)completion onCancel:(id)cancel;
-(void)presentActionSheetForStory:(id)story isMy:(BOOL)my;
-(void)resetTimer;
-(void)restart;
-(void)pause;
-(void)playLoaded;
-(void)playForce:(BOOL)force;
-(void)play;
-(void)setStoryIdens:(id)idens withCurrentIndex:(int)currentIndex;
-(id)currentStoryIden;
-(unsigned)footerViewModeForStoryState:(unsigned)storyState;
-(void)markCurrentStoryAsSeenIfNotSeenAlready;
-(void)updateFooterForStoryState:(unsigned)storyState;
-(void)setupViewModelObserverForViewModel:(id)viewModel;
-(void)setupVideoPlayer:(id)player;
-(void)updateContentForViewModel:(id)viewModel;
-(void)prepareForReuse;
-(id)navContext;
-(void)viewDidAppear:(BOOL)view;
-(void)viewDidDisappear:(BOOL)view;
-(void)viewWillDisappear:(BOOL)view;
-(void)viewWillAppear:(BOOL)view;
-(void)viewDidLoad;
-(void)loadView;
-(void)dealloc;
-(id)initWithMain:(id)main andModel:(id)model;
@end

