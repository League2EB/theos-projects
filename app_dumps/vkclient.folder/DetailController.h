/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "vkclient-Structs.h"
#import "UITextViewDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "VKMLiveController.h"
#import "ExtraInputPanelViewDelegate.h"

@class WrapAttachmentsLayout, DetailMoreCell, DetailModel, VKHUD, ExtraInputPanelView, UIRefreshControl, CommentEditContext, NSString, DocsSketchUploadEditAttachment, UITapGestureRecognizer, UIActivityIndicatorView;

__attribute__((visibility("hidden")))
@interface DetailController : VKMLiveController <UITextViewDelegate, ExtraInputPanelViewDelegate, UIGestureRecognizerDelegate> {
	BOOL keyboard;
	float offset;
	unsigned textMin;
	unsigned textMax;
	BOOL tracked;
	BOOL _forceInput;
	DetailMoreCell* _more;
	UIActivityIndicatorView* _loading;
	ExtraInputPanelView* _inputPanel;
	UITapGestureRecognizer* _gesture;
	CommentEditContext* _context;
	WrapAttachmentsLayout* _attachmentsLayout;
	UIRefreshControl* _bottomRefreshControl;
	float _inputPanelBottomOffset;
	VKHUD* _graffitiUploadingHud;
	DocsSketchUploadEditAttachment* _graffitiUploadEditAttachment;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) BOOL forceInput;
@property(retain, nonatomic) DetailModel* model;
@property(retain, nonatomic) DocsSketchUploadEditAttachment* graffitiUploadEditAttachment;
@property(retain, nonatomic) VKHUD* graffitiUploadingHud;
@property(assign, nonatomic) float inputPanelBottomOffset;
@property(retain, nonatomic) UIRefreshControl* bottomRefreshControl;
@property(retain, nonatomic) WrapAttachmentsLayout* attachmentsLayout;
@property(retain, nonatomic) CommentEditContext* context;
@property(retain, nonatomic) UITapGestureRecognizer* gesture;
@property(retain, nonatomic) ExtraInputPanelView* inputPanel;
@property(retain, nonatomic) UIActivityIndicatorView* loading;
@property(retain, nonatomic) DetailMoreCell* more;
-(void)setInputPanelHidden:(BOOL)hidden;
-(BOOL)isInputPanelHidden;
-(BOOL)tableView:(id)view shouldHighlightRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view didSelectRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view willSelectRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;
-(float)tableView:(id)view heightForRowAtIndexPath:(id)indexPath;
-(int)tableView:(id)view numberOfRowsInSection:(int)section;
-(void)scrollViewWillBeginDragging:(id)scrollView;
-(void)inputPanelViewDidChangeHeight:(id)inputPanelView;
-(void)VKMTableUpdatedIndex;
-(void)updateLoading;
-(float)keyboardOffset;
-(BOOL)isKeyboardVisible;
-(void)VKMScrollViewRefreshLoading;
-(void)addAttachments:(id)attachments;
-(id)createVideoUploadContextWithAsset:(id)asset;
-(void)cleanGraffitiUploading;
-(void)startGraffitiUploading:(id)uploading;
-(void)notificationGraffitiUploadAttachment:(id)attachment;
-(void)actionAttachments:(id)attachments;
-(void)actionActions:(id)actions;
-(void)fillActions;
-(void)sendFreeStandingAttachmentDomain:(id)domain additionalContextSetup:(id)setup;
-(void)actionSendInline:(id)anInline;
-(BOOL)VKMRoute:(id)route context:(id)context;
-(void)gestureAttachmentsTapped:(id)tapped;
-(void)extraInputPanelViewDidAttemptToSend:(id)extraInputPanelView;
-(void)extraInputPanelView:(id)view didSelectSticker:(id)sticker referrerContext:(id)context shouldClearText:(BOOL)text;
-(id)commentActionContext;
-(void)notificationAttachmentsReady:(id)ready;
-(void)notificationAttachmentsUpdated:(id)updated;
-(void)updateAttachments;
-(id)VKMControllerStatsRef;
-(id)navContext;
-(CGRect)VKMControllerViewport;
-(void)VKMScrollViewHasLoaded;
-(void)VKMControllerPrePush;
-(void)viewDidLoad;
-(UIEdgeInsets)VKMControllerChromeInsetsAdjust:(UIEdgeInsets)adjust;
-(void)loadView;
-(Class)VKMTableViewClass;
-(void)notificationAppActive:(id)active;
-(void)notificationKeyboard:(id)keyboard;
-(void)textViewDidChange:(id)textView;
-(void)textViewDidEndEditing:(id)textView;
-(BOOL)textView:(id)view shouldChangeTextInRange:(NSRange)range replacementText:(id)text;
-(BOOL)gestureRecognizerShouldBegin:(id)gestureRecognizer;
-(BOOL)gestureRecognizer:(id)recognizer shouldBeRequiredToFailByGestureRecognizer:(id)failByGestureRecognizer;
-(void)VKMControllerChromeInsetsApply;
-(void)dismissTemporaryModals:(id)modals;
-(void)hideKeyboardForced:(id)forced;
-(void)hideKeyboard;
-(void)animate:(double)animate options:(unsigned)options bottom:(BOOL)bottom;
-(void)updateSend;
-(void)updateForNewTextIsAutocomplete:(BOOL)newTextIsAutocomplete;
-(void)model:(id)model updated:(id)updated;
-(id)setupInput:(BOOL)input;
-(void)dealloc;
-(id)initWithMain:(id)main andModel:(id)model;
@end

