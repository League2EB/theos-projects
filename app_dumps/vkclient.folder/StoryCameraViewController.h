/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "vkclient-Structs.h"
#import "VKMController.h"
#import "UIGestureRecognizerDelegate.h"
#import "PHPhotoLibraryChangeObserver.h"
#import "StoryMediaPickerViewControllerDelegate.h"
#import "CameraManagerDelegate.h"

@class UIImpactFeedbackGenerator, CameraControlsView, UIPinchGestureRecognizer, UIView, StoryEditorNavigationBar, CameraManager, NSDate, NSString, KVOObserver, NSTimer, UILongPressGestureRecognizer, UITapGestureRecognizer, VideoRecordingProgressView, CameraPreviewLayerView;
@protocol StoryCameraViewControllerDelegate;

__attribute__((visibility("hidden")))
@interface StoryCameraViewController : VKMController <CameraManagerDelegate, StoryMediaPickerViewControllerDelegate, PHPhotoLibraryChangeObserver, UIGestureRecognizerDelegate> {
	BOOL _trackVolumeButtonForCapture;
	BOOL _canFlipCamera;
	BOOL _skipVolumeChange;
	id<StoryCameraViewControllerDelegate> _delegate;
	StoryEditorNavigationBar* _customNavigationBar;
	CameraManager* _cameraManager;
	CameraPreviewLayerView* _cameraPreview;
	CameraControlsView* _cameraControlsView;
	VideoRecordingProgressView* _recordingProgressView;
	UIView* _shutterBlinkOverlay;
	UITapGestureRecognizer* _focusTapGestureRecognizer;
	UITapGestureRecognizer* _flipCameraDoubleTapGestureRecognizer;
	UIPinchGestureRecognizer* _zoomPinchGesture;
	float _zoomFactorAtContinuedChangeBeginning;
	UILongPressGestureRecognizer* _captureLongPressGestureRecognizer;
	float _captureLongPressGestureBeginY;
	UIImpactFeedbackGenerator* _feedbackGenerator;
	NSTimer* _recordingProgressUpdateTimer;
	NSDate* _videoRecordingStartTime;
	NSDate* _videoRecordingStopTime;
	KVOObserver* _audioSessionObserver;
	float _initialSystemVolume;
	UIView* _volumeView;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) __weak id<StoryCameraViewControllerDelegate> delegate;
@property(retain, nonatomic) UIView* volumeView;
@property(assign, nonatomic) BOOL skipVolumeChange;
@property(assign, nonatomic) float initialSystemVolume;
@property(retain, nonatomic) KVOObserver* audioSessionObserver;
@property(assign, nonatomic) BOOL canFlipCamera;
@property(retain, nonatomic) NSDate* videoRecordingStopTime;
@property(retain, nonatomic) NSDate* videoRecordingStartTime;
@property(retain, nonatomic) NSTimer* recordingProgressUpdateTimer;
@property(assign, nonatomic) BOOL trackVolumeButtonForCapture;
@property(retain, nonatomic) UIImpactFeedbackGenerator* feedbackGenerator;
@property(assign, nonatomic) float captureLongPressGestureBeginY;
@property(retain, nonatomic) UILongPressGestureRecognizer* captureLongPressGestureRecognizer;
@property(assign, nonatomic) float zoomFactorAtContinuedChangeBeginning;
@property(retain, nonatomic) UIPinchGestureRecognizer* zoomPinchGesture;
@property(retain, nonatomic) UITapGestureRecognizer* flipCameraDoubleTapGestureRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer* focusTapGestureRecognizer;
@property(retain, nonatomic) UIView* shutterBlinkOverlay;
@property(retain, nonatomic) VideoRecordingProgressView* recordingProgressView;
@property(retain, nonatomic) CameraControlsView* cameraControlsView;
@property(retain, nonatomic) CameraPreviewLayerView* cameraPreview;
@property(retain, nonatomic) CameraManager* cameraManager;
@property(retain, nonatomic) StoryEditorNavigationBar* customNavigationBar;
-(void).cxx_destruct;
-(void)photoLibraryDidChange:(id)photoLibrary;
-(BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)gestureRecognizer;
-(void)storyMediaPickerViewController:(id)controller didFinishWithAsset:(id)asset;
-(void)cameraManager:(id)manager didFinishRecordingToOutputFileAtURL:(id)url error:(id)error;
-(void)cameraManager:(id)manager didStarRecordingToOutputFileAtURL:(id)url;
-(void)cameraManager:(id)manager didProcessCapturedPhoto:(id)photo metadata:(id)metadata;
-(void)cameraManagerDidCapturePhoto:(id)cameraManager;
-(void)cameraManagerWillCapturePhoto:(id)cameraManager;
-(void)handleSettingsButtonTap;
-(void)handleGrantCameraAndMicAccessButtonTap;
-(void)handleVolumeButtonPress;
-(void)actionZoomPinchGesture:(id)gesture;
-(void)handleCaptureButtonLongPressGesture:(id)gesture;
-(void)handleCameraDoubleTap:(id)tap;
-(void)handleFocusTapGesture:(id)gesture;
-(void)handleCapturePhotoTap:(id)tap;
-(void)handlePhotoLibraryButtonTap;
-(void)handleFlipCameraButtonTap;
-(void)handleFlashModeButtonTap:(id)tap;
-(void)handleCancelButtonTap;
-(void)getLastPhoto:(id)photo;
-(void)showNeedsPhotosPermissionAlert;
-(void)presentMediaPickerViewController;
-(void)updatePhotoLibraryButton;
-(void)resetUIAfterRecording;
-(void)setupUIForVideoRecordingStart;
-(void)updateVideoRecordingProgress;
-(void)stopRecordingProgressUpdateTimer;
-(void)startRecordingProgressUpdateTimer;
-(void)unfreezeCameraPreview;
-(void)freezeCameraPreview;
-(void)stopVideoRecording;
-(void)startVideoRecording;
-(void)capturePhoto;
-(void)switchFlashMode;
-(void)flipCamera;
-(void)updateFlashModeAndFlipCameraButtonsAppearanceForCurrentCameraDevice;
-(void)setupTargetActionsForCameraControlsView;
-(void)setSystemVolume:(float)volume;
-(void)enableVolumeHUD;
-(void)disableVolumeHUD;
-(void)handleVolumeChange:(id)change;
-(void)tearDownVolumeButtonHandler;
-(void)setupVolumeButtonHandler;
-(id)initialCameraConfig;
-(void)initializeRecordingProgressView;
-(void)setupNavigationBar;
-(void)initializeScrims;
-(void)initializeCameraPreviewAndCameraManager;
-(unsigned)supportedInterfaceOrientations;
-(int)preferredStatusBarUpdateAnimation;
-(int)preferredStatusBarStyle;
-(BOOL)prefersStatusBarHidden;
-(void)viewDidDisappear:(BOOL)view;
-(void)viewWillDisappear:(BOOL)view;
-(void)viewWillAppear:(BOOL)view;
-(void)viewDidAppear:(BOOL)view;
-(void)viewDidLoad;
-(void)dealloc;
-(id)initWithMain:(id)main andModel:(id)model;
@end

