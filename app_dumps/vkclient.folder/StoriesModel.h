/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "Model.h"
#import "StoryFullscreenViewModelProvider.h"

@class NSDictionary, NSMutableSet, NSMutableDictionary, NSString, NSArray;

__attribute__((visibility("hidden")))
@interface StoriesModel : Model <StoryFullscreenViewModelProvider> {
	NSArray* _mainStories;
	NSMutableDictionary* _sources;
	NSMutableDictionary* _storyByVKIden;
	NSMutableDictionary* _storyViewModels;
	NSMutableSet* _seenStories;
	NSMutableSet* _runningMarkSeenStories;
	NSDictionary* _lastGetStoriesResponse;
	NSMutableDictionary* _viewsCountByStoryIdentifier;
	NSMutableDictionary* _uploadingStories;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(readonly, assign, nonatomic) NSMutableDictionary* sources;
@property(retain, nonatomic) NSMutableDictionary* uploadingStories;
@property(retain, nonatomic) NSMutableDictionary* viewsCountByStoryIdentifier;
@property(retain, nonatomic) NSDictionary* lastGetStoriesResponse;
@property(retain, nonatomic) NSMutableSet* runningMarkSeenStories;
@property(retain, nonatomic) NSMutableSet* seenStories;
@property(copy, nonatomic) NSArray* mainStories;
@property(retain, nonatomic) NSMutableDictionary* storyViewModels;
@property(retain, nonatomic) NSMutableDictionary* storyByVKIden;
+(id)pickStoryVideoURLFromVideo:(id)video;
-(void).cxx_destruct;
-(id)storyFullscreenViewModelForIdentity:(id)identity;
-(void)handleUploadingStoryStateChangedNotification:(id)notification;
-(void)handleStoryEditorFinishedNotification:(id)notification;
-(void)handleSuccessfulUploadOfStory:(id)story;
-(void)removeMyStoryFromMainStories:(id)mainStories;
-(void)handleCanellationOfUploadingStory:(id)uploadingStory;
-(void)startUploadingStoryWithUploadContext:(id)uploadContext;
-(void)startHUDUploadWithContext:(id)context;
-(id)vkStoryForStoryIden:(id)storyIden;
-(id)cachedGetStoriesRequestResponseData;
-(void)cacheGetStoriesRequestResponse:(id)response;
-(id)getStoriesRequestCacheFileURL;
-(void)updateMainStories:(id)stories updateSeenStatuses:(BOOL)statuses postUpdateNotification:(BOOL)notification;
-(void)processStoriesData:(id)data postUpdateNotification:(BOOL)notification filterExpired:(BOOL)expired;
-(void)processStoriesData:(id)data;
-(void)fetchCachedStories;
-(id)addVKStory:(id)story;
-(void)addVKStories:(id)stories;
-(void)addSources:(id)sources;
-(void)updateViewsCount:(int)count forStory:(id)story;
-(id)viewsCountForStory:(id)story;
-(void)retryUploadForStory:(id)story;
-(void)loadStory:(id)story withCompletion:(id)completion;
-(void)deleteStory:(id)story withCompletion:(id)completion;
-(id)uploadingStoryForStoryIden:(id)storyIden;
-(id)sourceForStory:(id)story;
-(BOOL)isMyStory:(id)story;
-(id)myStories;
-(void)markStoryAsSeen:(id)seen fromSource:(id)source;
-(BOOL)storyIsSeen:(id)seen;
-(void)reloadMainStories;
-(void)actionStoriesSourceBan:(id)ban :(id)arg2;
-(void)registerForEvents:(id)events;
-(void)dealloc;
-(id)initWithSession:(id)session;
@end

