/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AVCaptureVideoDataOutputSampleBufferDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "VKClient-Structs.h"
#import "MaskEngineWrapper2Delegate.h"
#import "MovieRecorderDelegate.h"
#import "AVCaptureAudioDataOutputSampleBufferDelegate.h"

@class NSString, MaskEngineWrapper2, NSURL, AVCaptureConnection, AVCaptureStillImageOutput, KVOObserver, AVCaptureAudioDataOutput, MovieRecorder, CVPixelBufferView, AVCaptureVideoDataOutput, UILabel, AVCaptureDeviceInput, CameraConfig, NSDictionary, AVCaptureDevice, NSObject, AVCaptureSession, FPSMeasurer;
@protocol CameraManagerDelegate, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface CameraManager : XXUnknownSuperclass <AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureAudioDataOutputSampleBufferDelegate, MovieRecorderDelegate, MaskEngineWrapper2Delegate> {
	BOOL _videoRecordingInProgress;
	BOOL _freezeSampleBufferDisplayLayer;
	BOOL _recording;
	BOOL _recorededFirstFrameOfVideo;
	BOOL _maskEngineLoadingOrLoaded;
	unsigned _captureSessionSetupResult;
	CameraConfig* _cameraConfig;
	id<CameraManagerDelegate> _delegate;
	unsigned _cameraPosition;
	float _zoomFactor;
	UILabel* _measurementsLabel;
	FPSMeasurer* _fpsMeasurer;
	MovieRecorder* _recorder;
	NSObject<OS_dispatch_queue>* _sessionQueue;
	NSObject<OS_dispatch_queue>* _videoDataOutputQueue;
	NSObject<OS_dispatch_queue>* _audioDataOutputQueue;
	NSObject<OS_dispatch_queue>* _pixelBufferRenderingQueue;
	AVCaptureSession* _videoSession;
	AVCaptureSession* _audioSession;
	AVCaptureDevice* _backfacingCameraDevice;
	AVCaptureDeviceInput* _backfacingCameraDeviceInput;
	AVCaptureDevice* _frontfacingCameraDevice;
	AVCaptureDeviceInput* _frontfacingCameraDeviceInput;
	AVCaptureDevice* _microphoneDevice;
	AVCaptureDeviceInput* _microphoneDeviceInput;
	AVCaptureDevice* _currentCameraDevice;
	AVCaptureVideoDataOutput* _videoDataOutput;
	AVCaptureAudioDataOutput* _audioDataOutput;
	AVCaptureStillImageOutput* _stillImageOutput;
	AVCaptureConnection* _videoConnection;
	AVCaptureConnection* _audioConnection;
	KVOObserver* _stillImageOutputKVOObserver;
	KVOObserver* _currentDeviceKVOObserver;
	unsigned _backgroundRecordingId;
	opaqueCMFormatDescription* _outputVideoFormatDescription;
	opaqueCMFormatDescription* _outputAudioFormatDescription;
	int _videoBufferOrientation;
	NSDictionary* _videoCompressionSettings;
	NSDictionary* _audioCompressionSettings;
	NSURL* _recordingURL;
	MaskEngineWrapper2* _maskEngine;
	CVPixelBufferView* _pixelBufferView;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) UILabel* measurementsLabel;
@property(assign, nonatomic) BOOL freezeSampleBufferDisplayLayer;
@property(assign, nonatomic) float zoomFactor;
@property(readonly, assign, nonatomic) BOOL videoRecordingInProgress;
@property(readonly, assign, nonatomic) BOOL currentCameraDeviceHasTorch;
@property(readonly, assign, nonatomic) BOOL currentCameraDeviceHasFlash;
@property(assign, nonatomic) __weak id<CameraManagerDelegate> delegate;
@property(retain, nonatomic) CVPixelBufferView* pixelBufferView;
@property(assign, nonatomic) BOOL maskEngineLoadingOrLoaded;
@property(retain, nonatomic) MaskEngineWrapper2* maskEngine;
@property(assign, nonatomic) BOOL recorededFirstFrameOfVideo;
@property(assign, nonatomic) BOOL recording;
@property(copy, nonatomic) NSURL* recordingURL;
@property(retain, nonatomic) NSDictionary* audioCompressionSettings;
@property(retain, nonatomic) NSDictionary* videoCompressionSettings;
@property(assign, nonatomic) int videoBufferOrientation;
@property(retain, nonatomic) opaqueCMFormatDescription* outputAudioFormatDescription;
@property(retain, nonatomic) opaqueCMFormatDescription* outputVideoFormatDescription;
@property(assign, nonatomic) unsigned cameraPosition;
@property(assign, nonatomic) unsigned backgroundRecordingId;
@property(retain, nonatomic) KVOObserver* currentDeviceKVOObserver;
@property(retain, nonatomic) KVOObserver* stillImageOutputKVOObserver;
@property(retain, nonatomic) AVCaptureConnection* audioConnection;
@property(retain, nonatomic) AVCaptureConnection* videoConnection;
@property(retain, nonatomic) AVCaptureStillImageOutput* stillImageOutput;
@property(retain, nonatomic) AVCaptureAudioDataOutput* audioDataOutput;
@property(retain, nonatomic) AVCaptureVideoDataOutput* videoDataOutput;
@property(retain, nonatomic) AVCaptureDevice* currentCameraDevice;
@property(retain, nonatomic) AVCaptureDeviceInput* microphoneDeviceInput;
@property(retain, nonatomic) AVCaptureDevice* microphoneDevice;
@property(retain, nonatomic) AVCaptureDeviceInput* frontfacingCameraDeviceInput;
@property(retain, nonatomic) AVCaptureDevice* frontfacingCameraDevice;
@property(retain, nonatomic) AVCaptureDeviceInput* backfacingCameraDeviceInput;
@property(retain, nonatomic) AVCaptureDevice* backfacingCameraDevice;
@property(retain, nonatomic) AVCaptureSession* audioSession;
@property(retain, nonatomic) AVCaptureSession* videoSession;
@property(retain, nonatomic) NSObject<OS_dispatch_queue>* pixelBufferRenderingQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue>* audioDataOutputQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue>* videoDataOutputQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue>* sessionQueue;
@property(retain, nonatomic) MovieRecorder* recorder;
@property(retain, nonatomic) CameraConfig* cameraConfig;
@property(assign, nonatomic) unsigned captureSessionSetupResult;
@property(retain, nonatomic) FPSMeasurer* fpsMeasurer;
+(BOOL)backfacingCameraDeviceAvailable;
+(BOOL)frontfacingCameraDeviceAvailable;
+(id)sessionPresetForStoryFrontfacingCamera;
+(id)sessionPresetForStoryBackfacingCamera;
+(id)sessionPresetForStoryCameraForPosition:(unsigned)position;
+(id)cameraDeviceWithPosition:(int)position;
-(void).cxx_destruct;
-(void)stopApplyingMask;
-(void)applyMaskWithJsonFilePath:(id)jsonFilePath;
-(void)loadMaskEngineWithAssetsPathIfNotAlready:(id)assetsPathIfNotAlready;
-(void)movieRecorderDidFinishPreparing:(id)movieRecorder;
-(void)movieRecorder:(id)recorder didFailWithError:(id)error;
-(void)movieRecorderDidFinishRecording:(id)movieRecorder;
-(void)appendAudioSampleBufferToRecorderIfNeeded:(opaqueCMSampleBuffer*)recorderIfNeeded;
-(void)appendVideoSampleBufferToRecorderIfNeeded:(opaqueCMSampleBuffer*)recorderIfNeeded;
-(void)captureOutput:(id)output didOutputSampleBuffer:(opaqueCMSampleBuffer*)buffer fromConnection:(id)connection;
-(void)receiveSampleBufferWithApplyingMask:(opaqueCMSampleBuffer*)applyingMask;
-(void)maskEngineWrapper2:(id)a2 pixelBufferReady:(char*)ready width:(unsigned)width height:(unsigned)height backCamera:(BOOL)camera photo:(BOOL)photo timestampMs:(unsigned)ms;
-(void)maskEngineWrapper2:(id)a2 maskLoadStatusChanged:(id)changed maskLoadStatus:(unsigned)status;
-(void)maskEngineWrapper2:(id)a2 renderLoadStatusChanged:(BOOL)changed;
-(void)maskEngineWrapper2:(id)a2 modelLoadStatusChanged:(BOOL)changed;
-(void)maskEngineWrapper2:(id)a2 changedMaskLoaded:(BOOL)loaded;
-(CGAffineTransform)transformFromVideoBufferOrientationToOrientation:(int)orientation withAutoMirroring:(BOOL)autoMirroring;
-(void)addInputToSessionIfPossible:(id)sessionIfPossible input:(id)input;
-(void)removeInputFromSessionIfExists:(id)sessionIfExists input:(id)input;
-(BOOL)session:(id)session containsInput:(id)input;
-(void)addInputToSessionIfPossible:(id)sessionIfPossible;
-(void)removeInputFromSessionIfExists:(id)sessionIfExists;
-(BOOL)sessionContainsInput:(id)input;
-(void)askUserForPermissionIfNeededWithMediaType:(id)mediaType withCompletion:(id)completion;
-(void)handleCurrentCameraDeviceAdjustingExposureChange:(BOOL)change;
-(void)handleCurrentCameraDeviceAdjustingFocusChange:(BOOL)change;
-(void)handleStillImageOutputCapturingStillImageChange:(BOOL)change;
-(void)focusAndAdjustWhiteBalanceAtAdjustedPoint:(CGPoint)adjustedPoint;
-(void)stopAudioSession;
-(void)startAudioSession;
-(void)stopVideoRecording;
-(void)startVideoRecording;
-(void)capturePhoto;
-(void)setCameraConfig:(id)config asyncWithCompletion:(id)completion;
-(id)createKVOObserverForCurrentDevice:(id)currentDevice;
-(void)setupFocusAndExposureForDevice:(id)device;
-(void)applyCameraPosition:(unsigned)position;
-(void)applyConfiguration:(id)configuration lockSessionForConfiguration:(BOOL)configuration2;
-(id)createKVOObserverForStillImageOutput:(id)stillImageOutput;
-(void)initializeAndStartSessionWithConfig:(id)config requestCameraPermissionIfNeeded:(BOOL)needed requestMicrophonePermissionIfNeeded:(BOOL)needed3 pixelBufferView:(id)view completion:(id)completion;
-(id)init;
-(void)dealloc;
@end

