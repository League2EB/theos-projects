/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "VKLPSUpdateVisitor.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSString, NSMutableDictionary, NSNumber, NSMutableSet;

__attribute__((visibility("hidden")))
@interface VKMStoreUpdateData : XXUnknownSuperclass <VKLPSUpdateVisitor> {
	NSMutableSet* _dids;
	NSMutableSet* _mids;
	NSMutableSet* _uids;
	NSMutableDictionary* _inReadUpdates;
	NSMutableDictionary* _outReadUpdates;
	NSMutableDictionary* _dialogs;
	NSMutableDictionary* _messages;
	NSNumber* _lastMID;
	NSNumber* _counter;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) NSNumber* counter;
@property(retain, nonatomic) NSNumber* lastMID;
@property(retain, nonatomic) NSMutableDictionary* messages;
@property(retain, nonatomic) NSMutableDictionary* dialogs;
@property(retain, nonatomic) NSMutableDictionary* outReadUpdates;
@property(retain, nonatomic) NSMutableDictionary* inReadUpdates;
@property(retain, nonatomic) NSMutableSet* uids;
@property(retain, nonatomic) NSMutableSet* mids;
@property(retain, nonatomic) NSMutableSet* dids;
+(id)data;
+(id)dataWithMessages:(id)messages inDialog:(id)dialog owner:(id)owner;
+(id)dataWithDialogs:(id)dialogs owner:(id)owner;
-(void).cxx_destruct;
-(BOOL)readStateForMessage:(id)message withPeer:(id)peer incoming:(BOOL)incoming context:(id)context;
-(void)messagesCounter:(id)counter;
-(void)user:(id)user typingInChat:(id)chat context:(id)context;
-(void)user:(id)user online:(BOOL)online flags:(unsigned)flags context:(id)context;
-(void)chatUpdated:(id)updated user:(BOOL)user context:(id)context;
-(void)message:(id)message restored:(BOOL)irestored read:(id)read did:(id)did uid:(id)uid date:(id)date title:(id)title body:(id)body att:(BOOL)att randomId:(id)anId context:(id)context;
-(void)readUpdatePeer:(id)peer beforeMid:(id)mid incoming:(BOOL)incoming context:(id)context;
-(void)messageRemoved:(id)removed context:(id)context;
-(void)messageUpdated:(id)updated read:(BOOL)read context:(id)context;
-(BOOL)hasUpdates;
@end

