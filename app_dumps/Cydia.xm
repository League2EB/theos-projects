/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

typedef struct _NSZone NSZone;

typedef struct CGPoint {
	float _field1;
	float _field2;
} CGPoint;

typedef struct CGSize {
	float _field1;
	float _field2;
} CGSize;

typedef struct CGRect {
	CGPoint _field1;
	CGSize _field2;
} CGRect;

typedef struct _NSRange {
	unsigned _field1;
	unsigned _field2;
} NSRange;

template<>
struct MenesObjectHandle<UIColor, 0> {
	UIColor* value_;
};

template<>
struct MenesObjectHandle<CyteTableViewCellContentView, 1> {
	CyteTableViewCellContentView* value_;
};

template<>
struct MenesObjectHandle<CyteWebView, 1> {
	CyteWebView* value_;
};

template<>
struct MenesObjectHandle<UIActivityIndicatorView, 0> {
	UIActivityIndicatorView* value_;
};

template<>
struct MenesObjectHandle<IndirectDelegate, 1> {
	IndirectDelegate* value_;
};

template<>
struct MenesObjectHandle<NSURLAuthenticationChallenge, 0> {
	NSURLAuthenticationChallenge* value_;
};

template<>
struct MenesObjectHandle<NSURLRequest, 0> {
	NSURLRequest* value_;
};

template<>
struct MenesObjectHandle<NSURL, 0> {
	NSURL* value_;
};

template<>
struct MenesObjectHandle<NSString, 0> {
	NSString* value_;
};

template<>
struct MenesObjectHandle<NSMutableSet, 0> {
	NSMutableSet* value_;
};

template<>
struct MenesObjectHandle<NSTimer, 0> {
	NSTimer* value_;
};

template<>
struct MenesObjectHandle<NSObject, 0> {
	NSObject* value_;
};

template<>
struct MenesObjectHandle<WebScriptObject, 0> {
	WebScriptObject* value_;
};

template<>
struct MenesObjectHandle<UIBarButtonItem, 0> {
	UIBarButtonItem* value_;
};

template<>
struct MenesObjectHandle<UIViewController, 0> {
	UIViewController* value_;
};

template<>
struct MenesObjectHandle<UILabel, 0> {
	UILabel* value_;
};

template<>
struct MenesObjectHandle<UIView, 0> {
	UIView* value_;
};

template<>
struct MenesObjectHandle<NSArray, 0> {
	NSArray* value_;
};

typedef struct _Alloc_hider {
	char* _field1;
} Alloc_hider;

template<>
struct basic_string<char, std::char_traits<char>, std::allocator<char> > {
	Alloc_hider _field1;
};

typedef struct Item Item;

typedef struct ItemDesc {
	basic_string<char, std::char_traits<char>, std::allocator<char> > _field1;
	basic_string<char, std::char_traits<char>, std::allocator<char> > _field2;
	basic_string<char, std::char_traits<char>, std::allocator<char> > _field3;
	Item* _field4;
} ItemDesc;

template<>
struct vector<pkgIndexFile *, std::allocator<pkgIndexFile *> >;

typedef struct metaIndex {
	/*function-pointer*/ void** _field1;
	vector<pkgIndexFile* , std::allocator<pkgIndexFile* > >* _field2;
	char* _field3;
	basic_string<char, std::char_traits<char>, std::allocator<char> > _field4;
	basic_string<char, std::char_traits<char>, std::allocator<char> > _field5;
	bool _field6;
} metaIndex;

typedef struct __CFString* CFStringRef;

typedef struct CYString {
	char* data_;
	unsigned size_;
	CFStringRef cache_;
} CYString;

template<>
struct MenesObjectHandle<NSMutableDictionary, 0> {
	NSMutableDictionary* value_;
};

template<>
struct less<std::basic_string<char> >;

typedef struct _Rb_tree_node_base {
	int _M_color;
	Rb_tree_node_base* _M_parent;
	Rb_tree_node_base* _M_left;
	Rb_tree_node_base* _M_right;
} Rb_tree_node_base;

template<>
struct _Rb_tree_impl<std::less<std::basic_string<char> >, false> {
	less<std::basic_string<char> > _M_key_compare;
	Rb_tree_node_base _M_header;
	unsigned _M_node_count;
};

template<>
struct _Rb_tree<std::basic_string<char>, std::basic_string<char>, std::_Identity<std::basic_string<char> >, std::less<std::basic_string<char> >, std::allocator<std::basic_string<char> > > {
	_Rb_tree_impl<std::less<std::basic_string<char> >, false> _M_impl;
};

template<>
struct set<std::basic_string<char>, std::less<std::basic_string<char> >, std::allocator<std::basic_string<char> > > {
	_Rb_tree<std::basic_string<char>, std::basic_string<char>, std::_Identity<std::basic_string<char> >, std::less<std::basic_string<char> >, std::allocator<std::basic_string<char> > > _M_t;
};

typedef struct Cleaner Cleaner;

typedef struct CYPool {
	char* data_;
	unsigned size_;
	Cleaner* cleaner_;
} CYPool;

template<>
struct MenesObjectHandle<CydiaOperation, 0> {
	CydiaOperation* value_;
};

typedef struct Dependency Dependency;

typedef struct pkgCache pkgCache;

typedef struct DepIterator {
	Dependency* _field1;
	int _field2;
	pkgCache* _field3;
} DepIterator;

template<>
struct MenesObjectHandle<NSMutableArray, 0> {
	NSMutableArray* value_;
};

typedef struct Version Version;

typedef struct VerIterator {
	Version* Ver;
	pkgCache* Owner;
} VerIterator;

typedef struct Package Package;

typedef struct PkgIterator {
	Package* Pkg;
	pkgCache* Owner;
	long HashIndex;
} PkgIterator;

typedef struct VerFile VerFile;

typedef struct VerFileIterator {
	pkgCache* Owner;
	VerFile* FileP;
} VerFileIterator;

template<>
struct MenesObjectHandle<Source, 0> {
	Source* value_;
};

template<>
struct Offset<void> {
	unsigned _field1;
};

template<>
struct Offset<PackageValue> {
	unsigned _field1;
};

typedef struct PackageValue {
	Offset<void> _field1;
	Offset<PackageValue> _field2;
	unsigned _field3 : 23;
	unsigned _field4 : 1;
	unsigned _field5 : 8;
	int _field6;
	int _field7;
	unsigned short _field8;
	unsigned short _field9;
	BOOL _field10[8];
	BOOL _field11[0];
} PackageValue;

typedef struct ParsedPackage {
	CYString _field1;
	CYString _field2;
	CYString _field3;
	CYString _field4;
	CYString _field5;
	CYString _field6;
	CYString _field7;
	CYString _field8;
} ParsedPackage;

template<>
struct MenesObjectHandle<NSDate, 0> {
	NSDate* value_;
};

typedef struct MMap MMap;

typedef struct pkgDepCache pkgDepCache;

typedef struct pkgPolicy pkgPolicy;

typedef struct pkgCacheFile {
	MMap* Map;
	pkgCache* Cache;
	pkgDepCache* DCache;
	pkgPolicy* Policy;
} pkgCacheFile;

typedef struct Policy {
	/*function-pointer*/ void** _field1;
} Policy;

typedef struct Parser Parser;

typedef struct _Vector_impl {
	Parser** _field1;
	Parser** _field2;
	Parser** _field3;
} Vector_impl;

template<>
struct vector<pkgRecords::Parser *, std::allocator<pkgRecords::Parser *> > {
	Vector_impl _field1;
};

typedef struct pkgRecords {
	pkgCache* _field1;
	vector<pkgRecords::Parser *, std::allocator<pkgRecords::Parser *> > _field2;
} pkgRecords;

typedef struct pkgProblemResolver {
	pkgDepCache* _field1;
	short* _field2;
	char* _field3;
	bool _field4;
} pkgProblemResolver;

typedef struct _Vector_impl {
	Item** _field1;
	Item** _field2;
	Item** _field3;
} Vector_impl;

template<>
struct vector<pkgAcquire::Item *, std::allocator<pkgAcquire::Item *> > {
	Vector_impl _field1;
};

typedef struct Queue Queue;

typedef struct Worker Worker;

typedef struct MethodConfig MethodConfig;

typedef struct pkgAcquireStatus pkgAcquireStatus;

typedef struct pkgAcquire {
	/*function-pointer*/ void** _field1;
	vector<pkgAcquire::Item *, std::allocator<pkgAcquire::Item *> > _field2;
	Queue* _field3;
	Worker* _field4;
	MethodConfig* _field5;
	pkgAcquireStatus* _field6;
	unsigned long _field7;
	int _field8;
	bool _field9;
	bool _field10;
} pkgAcquire;

typedef struct FileFd {
	/*function-pointer*/ void** _field1;
	int _field2;
	unsigned long _field3;
	basic_string<char, std::char_traits<char>, std::allocator<char> > _field4;
} FileFd;

typedef struct pkgPackageManager pkgPackageManager;

template<>
struct SPtr<pkgPackageManager> {
	pkgPackageManager* Ptr;
};

typedef struct _Vector_impl {
	metaIndex** _field1;
	metaIndex** _field2;
	metaIndex** _field3;
} Vector_impl;

template<>
struct vector<metaIndex *, std::allocator<metaIndex *> > {
	Vector_impl _field1;
};

typedef struct pkgSourceList {
	vector<metaIndex *, std::allocator<metaIndex *> > _field1;
} pkgSourceList;

template<>
struct less<unsigned long>;

template<>
struct _Rb_tree_impl<std::less<unsigned long>, false> {
	less<unsigned long> _M_key_compare;
	Rb_tree_node_base _M_header;
	unsigned _M_node_count;
};

template<>
struct _Rb_tree<unsigned long, std::pair<const unsigned long, MenesObjectHandle<Source, 0> >, std::_Select1st<std::pair<const unsigned long, MenesObjectHandle<Source, 0> > >, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, MenesObjectHandle<Source, 0> > > > {
	_Rb_tree_impl<std::less<unsigned long>, false> _M_impl;
};

template<>
struct map<unsigned long, MenesObjectHandle<Source, 0>, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, MenesObjectHandle<Source, 0> > > > {
	_Rb_tree<unsigned long, std::pair<const unsigned long, MenesObjectHandle<Source, 0> >, std::_Select1st<std::pair<const unsigned long, MenesObjectHandle<Source, 0> > >, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, MenesObjectHandle<Source, 0> > > > _M_t;
};

typedef struct __CFArray* CFArrayRef;

typedef struct timeval {
	int tv_sec;
	int tv_usec;
} timeval;

typedef struct CydiaStatus {
	/*function-pointer*/ void** _vptr$pkgAcquireStatus;
	timeval Time;
	timeval StartTime;
	double LastBytes;
	double CurrentCPS;
	double CurrentBytes;
	double TotalBytes;
	double FetchedBytes;
	unsigned long ElapsedTime;
	unsigned long TotalItems;
	unsigned long CurrentItems;
	bool Update;
	bool MorePulses;
	bool cancelled_;
	NSObject<ProgressDelegate>* delegate_;
} CydiaStatus;

typedef struct __sbuf {
	char* _field1;
	int _field2;
} sbuf;

typedef struct __sFILEX sFILEX;

typedef struct __sFILE {
	char* _field1;
	int _field2;
	int _field3;
	short _field4;
	short _field5;
	sbuf _field6;
	int _field7;
	void* _field8;
	/*function-pointer*/ void* _field9;
	/*function-pointer*/ void* _field10;
	/*function-pointer*/ void* _field11;
	/*function-pointer*/ void* _field12;
	sbuf _field13;
	sFILEX* _field14;
	int _field15;
	unsigned char _field16[3];
	unsigned char _field17[1];
	sbuf _field18;
	int _field19;
	long long _field20;
} FILE;

template<>
struct less<const char *>;

template<>
struct _Rb_tree_impl<std::less<const char *>, false> {
	less<const char *> _M_key_compare;
	Rb_tree_node_base _M_header;
	unsigned _M_node_count;
};

template<>
struct _Rb_tree<const char *, std::pair<const char *const, MenesObjectHandle<NSString, 0> >, std::_Select1st<std::pair<const char *const, MenesObjectHandle<NSString, 0> > >, std::less<const char *>, std::allocator<std::pair<const char *const, MenesObjectHandle<NSString, 0> > > > {
	_Rb_tree_impl<std::less<const char *>, false> _M_impl;
};

template<>
struct map<const char *, MenesObjectHandle<NSString, 0>, std::less<const char *>, std::allocator<std::pair<const char *const, MenesObjectHandle<NSString, 0> > > > {
	_Rb_tree<const char *, std::pair<const char *const, MenesObjectHandle<NSString, 0> >, std::_Select1st<std::pair<const char *const, MenesObjectHandle<NSString, 0> > >, std::less<const char *>, std::allocator<std::pair<const char *const, MenesObjectHandle<NSString, 0> > > > _M_t;
};

typedef struct CancelStatus {
	/*function-pointer*/ void** _field1;
	timeval _field2;
	timeval _field3;
	double _field4;
	double _field5;
	double _field6;
	double _field7;
	double _field8;
	unsigned long _field9;
	unsigned long _field10;
	unsigned long _field11;
	bool _field12;
	bool _field13;
	bool _field14;
} CancelStatus;

typedef struct PackageFile PackageFile;

typedef struct PkgFileIterator {
	pkgCache* _field1;
	PackageFile* _field2;
} PkgFileIterator;

typedef struct URegularExpression URegularExpression;

typedef struct RegEx {
	URegularExpression* regex_;
	int capture_;
	unsigned size_;
} RegEx;

template<>
struct MenesObjectHandle<CyteWebViewController, 0> {
	CyteWebViewController* value_;
};

template<>
struct MenesObjectHandle<CydiaObject, 0> {
	CydiaObject* value_;
};

template<>
struct MenesObjectHandle<UIAlertView, 0> {
	UIAlertView* value_;
};

template<>
struct MenesObjectHandle<NSDictionary, 0> {
	NSDictionary* value_;
};

template<>
struct MenesObjectHandle<CydiaProgressData, 1> {
	CydiaProgressData* value_;
};

template<>
struct MenesObjectHandle<UIImage, 0> {
	UIImage* value_;
};

template<>
struct MenesObjectHandle<UISwitch, 0> {
	UISwitch* value_;
};

template<>
struct MenesObjectHandle<Package, 0> {
	Package* value_;
};

template<>
struct MenesObjectHandle<UITableView, 2> {
	UITableView* value_;
};

template<>
struct pair<MenesObjectHandle<NSString, 0>, MenesObjectHandle<NSString, 0> >;

typedef struct _Vector_impl {
	pair<MenesObjectHandle<NSString, 0>, MenesObjectHandle<NSString, 0> >* _M_start;
	pair<MenesObjectHandle<NSString, 0>, MenesObjectHandle<NSString, 0> >* _M_finish;
	pair<MenesObjectHandle<NSString, 0>, MenesObjectHandle<NSString, 0> >* _M_end_of_storage;
} Vector_impl;

template<>
struct vector<std::pair<MenesObjectHandle<NSString, 0>, MenesObjectHandle<NSString, 0> >, std::allocator<std::pair<MenesObjectHandle<NSString, 0>, MenesObjectHandle<NSString, 0> > > > {
	Vector_impl _M_impl;
};

template<>
struct MenesObjectHandle<UIActionSheet, 0> {
	UIActionSheet* value_;
};

typedef struct _Vector_impl {
	int* _M_start;
	int* _M_finish;
	int* _M_end_of_storage;
} Vector_impl;

template<>
struct vector<int, std::allocator<int> > {
	Vector_impl _M_impl;
};

typedef struct Abstract Abstract;

template<>
struct Function<bool, Package *> {
	Abstract* abstract_;
};

template<>
struct Function<void, NSMutableArray *> {
	Abstract* abstract_;
};

typedef struct __CFRunLoop* CFRunLoopRef;

typedef struct __SCNetworkReachability* SCNetworkReachabilityRef;

template<>
struct MenesObjectHandle<UISearchBar, 1> {
	UISearchBar* value_;
};

template<>
struct MenesObjectHandle<UITableViewCell, 0> {
	UITableViewCell* value_;
};

template<>
struct MenesObjectHandle<Source, 1> {
	Source* value_;
};

template<>
struct MenesObjectHandle<UIProgressHUD, 0> {
	UIProgressHUD* value_;
};

template<>
struct MenesObjectHandle<NSError, 0> {
	NSError* value_;
};

template<>
struct MenesObjectHandle<UIWindow, 0> {
	UIWindow* value_;
};

template<>
struct MenesObjectHandle<CydiaTabBarController, 0> {
	CydiaTabBarController* value_;
};

template<>
struct MenesObjectHandle<CyteTabBarController, 0> {
	CyteTabBarController* value_;
};

template<>
struct MenesObjectHandle<AppCacheController, 0> {
	AppCacheController* value_;
};

template<>
struct MenesObjectHandle<StashController, 0> {
	StashController* value_;
};

typedef struct __GSEvent* GSEventRef;

typedef struct {
	unsigned long _field1;
	id* _field2;
	unsigned long* _field3;
	unsigned long _field4[5];
} XXStruct_kFm5bA;

@protocol NSObject
-(id)description;
-(unsigned)retainCount;
-(id)autorelease;
-(oneway void)release;
-(id)retain;
-(BOOL)respondsToSelector:(SEL)selector;
-(BOOL)conformsToProtocol:(id)protocol;
-(BOOL)isMemberOfClass:(Class)aClass;
-(BOOL)isKindOfClass:(Class)aClass;
-(BOOL)isProxy;
-(id)performSelector:(SEL)selector withObject:(id)object withObject:(id)object3;
-(id)performSelector:(SEL)selector withObject:(id)object;
-(id)performSelector:(SEL)selector;
-(NSZone*)zone;
-(id)self;
-(Class)class;
-(Class)superclass;
-(unsigned)hash;
-(BOOL)isEqual:(id)equal;
@optional
-(id)debugDescription;
@end

@protocol WebPolicyDecisionListener <NSObject>
-(void)ignore;
-(void)download;
-(void)use;
@end

@protocol UIWebViewDelegate <NSObject>
@optional
-(void)webView:(id)view didFailLoadWithError:(id)error;
-(void)webViewDidFinishLoad:(id)webView;
-(void)webViewDidStartLoad:(id)webView;
-(BOOL)webView:(id)view shouldStartLoadWithRequest:(id)request navigationType:(int)type;
@end

@protocol CyteWebViewDelegate <UIWebViewDelegate>
@optional
-(void)webViewUpdateViewSettings:(id)settings;
-(bool)webView:(id)view shouldRunJavaScriptTextInputPanelWithPrompt:(id)prompt defaultText:(id)text initiatedByFrame:(id)frame;
-(bool)webView:(id)view shouldRunJavaScriptConfirmPanelWithMessage:(id)message initiatedByFrame:(id)frame;
-(bool)webView:(id)view shouldRunJavaScriptAlertPanelWithMessage:(id)message initiatedByFrame:(id)frame;
-(void)webViewClose:(id)close;
-(id)webThreadWebView:(id)view resource:(id)resource willSendRequest:(id)request redirectResponse:(id)response fromDataSource:(id)dataSource;
-(id)webView:(id)view resource:(id)resource willSendRequest:(id)request redirectResponse:(id)response fromDataSource:(id)dataSource;
-(void)webView:(id)view resource:(id)resource didCancelAuthenticationChallenge:(id)challenge fromDataSource:(id)dataSource;
-(void)webView:(id)view resource:(id)resource didReceiveAuthenticationChallenge:(id)challenge fromDataSource:(id)dataSource;
-(void)webView:(id)view didStartProvisionalLoadForFrame:(id)frame;
-(void)webView:(id)view didReceiveTitle:(id)title forFrame:(id)frame;
-(void)webView:(id)view didFinishLoadForFrame:(id)frame;
-(void)webView:(id)view didFailProvisionalLoadWithError:(id)error forFrame:(id)frame;
-(void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;
-(void)webView:(id)view didDecidePolicy:(int)policy forNavigationAction:(id)navigationAction request:(id)request frame:(id)frame;
-(void)webView:(id)view didCommitLoadForFrame:(id)frame;
-(void)webView:(id)view didClearWindowObject:(id)object forFrame:(id)frame;
-(void)webView:(id)view decidePolicyForNewWindowAction:(id)newWindowAction request:(id)request newFrameName:(id)name decisionListener:(id)listener;
-(void)webView:(id)view decidePolicyForNavigationAction:(id)navigationAction request:(id)request frame:(id)frame decisionListener:(id)listener;
-(void)webView:(id)view addMessageToConsole:(id)console;
@end

@protocol MFMailComposeViewControllerDelegate <NSObject>
@optional
-(void)mailComposeController:(id)controller didFinishWithResult:(int)result error:(id)error;
@end

@protocol ProgressDelegate
-(void)setTitle:(id)title;
-(bool)isProgressCancelled;
-(void)setProgressCancellable:(id)cancellable;
-(void)setProgressStatus:(id)status;
-(void)setProgressPercent:(id)percent;
-(void)addProgressEvent:(id)event;
@end

@protocol CyteTableViewCellDelegate
-(void)drawContentRect:(CGRect)rect;
@end

@protocol UITableViewDataSource <NSObject>
-(id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;
-(int)tableView:(id)view numberOfRowsInSection:(int)section;
@optional
-(void)tableView:(id)view moveRowAtIndexPath:(id)indexPath toIndexPath:(id)indexPath3;
-(void)tableView:(id)view commitEditingStyle:(int)style forRowAtIndexPath:(id)indexPath;
-(int)tableView:(id)view sectionForSectionIndexTitle:(id)sectionIndexTitle atIndex:(int)index;
-(id)sectionIndexTitlesForTableView:(id)tableView;
-(BOOL)tableView:(id)view canMoveRowAtIndexPath:(id)indexPath;
-(BOOL)tableView:(id)view canEditRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view titleForFooterInSection:(int)section;
-(id)tableView:(id)view titleForHeaderInSection:(int)section;
-(int)numberOfSectionsInTableView:(id)tableView;
@end

@protocol UIScrollViewDelegate <NSObject>
@optional
-(void)scrollViewDidScrollToTop:(id)scrollView;
-(BOOL)scrollViewShouldScrollToTop:(id)scrollView;
-(void)scrollViewDidEndZooming:(id)scrollView withView:(id)view atScale:(float)scale;
-(void)scrollViewWillBeginZooming:(id)scrollView withView:(id)view;
-(id)viewForZoomingInScrollView:(id)scrollView;
-(void)scrollViewDidEndScrollingAnimation:(id)scrollView;
-(void)scrollViewDidEndDecelerating:(id)scrollView;
-(void)scrollViewWillBeginDecelerating:(id)scrollView;
-(void)scrollViewDidEndDragging:(id)scrollView willDecelerate:(BOOL)decelerate;
-(void)scrollViewWillEndDragging:(id)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(inout CGPoint*)offset;
-(void)scrollViewWillBeginDragging:(id)scrollView;
-(void)scrollViewDidZoom:(id)scrollView;
-(void)scrollViewDidScroll:(id)scrollView;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>
@optional
-(void)tableView:(id)view performAction:(SEL)action forRowAtIndexPath:(id)indexPath withSender:(id)sender;
-(BOOL)tableView:(id)view canPerformAction:(SEL)action forRowAtIndexPath:(id)indexPath withSender:(id)sender;
-(BOOL)tableView:(id)view shouldShowMenuForRowAtIndexPath:(id)indexPath;
-(int)tableView:(id)view indentationLevelForRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view targetIndexPathForMoveFromRowAtIndexPath:(id)indexPath toProposedIndexPath:(id)proposedIndexPath;
-(void)tableView:(id)view didEndEditingRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view willBeginEditingRowAtIndexPath:(id)indexPath;
-(BOOL)tableView:(id)view shouldIndentWhileEditingRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view titleForDeleteConfirmationButtonForRowAtIndexPath:(id)indexPath;
-(int)tableView:(id)view editingStyleForRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view didDeselectRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view didSelectRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view willDeselectRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view willSelectRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view didUnhighlightRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view didHighlightRowAtIndexPath:(id)indexPath;
-(BOOL)tableView:(id)view shouldHighlightRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view accessoryButtonTappedForRowWithIndexPath:(id)indexPath;
-(int)tableView:(id)view accessoryTypeForRowWithIndexPath:(id)indexPath;
-(id)tableView:(id)view viewForFooterInSection:(int)section;
-(id)tableView:(id)view viewForHeaderInSection:(int)section;
-(float)tableView:(id)view estimatedHeightForFooterInSection:(int)section;
-(float)tableView:(id)view estimatedHeightForHeaderInSection:(int)section;
-(float)tableView:(id)view estimatedHeightForRowAtIndexPath:(id)indexPath;
-(float)tableView:(id)view heightForFooterInSection:(int)section;
-(float)tableView:(id)view heightForHeaderInSection:(int)section;
-(float)tableView:(id)view heightForRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view didEndDisplayingFooterView:(id)view2 forSection:(int)section;
-(void)tableView:(id)view didEndDisplayingHeaderView:(id)view2 forSection:(int)section;
-(void)tableView:(id)view didEndDisplayingCell:(id)cell forRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view willDisplayFooterView:(id)view2 forSection:(int)section;
-(void)tableView:(id)view willDisplayHeaderView:(id)view2 forSection:(int)section;
-(void)tableView:(id)view willDisplayCell:(id)cell forRowAtIndexPath:(id)indexPath;
@end

@protocol UIActionSheetDelegate <NSObject>
@optional
-(void)actionSheet:(id)sheet didDismissWithButtonIndex:(int)buttonIndex;
-(void)actionSheet:(id)sheet willDismissWithButtonIndex:(int)buttonIndex;
-(void)didPresentActionSheet:(id)sheet;
-(void)willPresentActionSheet:(id)sheet;
-(void)actionSheetCancel:(id)cancel;
-(void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;
@end

@protocol UITabBarControllerDelegate <NSObject>
@optional
-(id)tabBarController:(id)controller animationControllerForTransitionFromViewController:(id)viewController toViewController:(id)viewController3;
-(id)tabBarController:(id)controller interactionControllerForAnimationController:(id)animationController;
-(int)tabBarControllerPreferredInterfaceOrientationForPresentation:(id)presentation;
-(unsigned)tabBarControllerSupportedInterfaceOrientations:(id)orientations;
-(void)tabBarController:(id)controller didEndCustomizingViewControllers:(id)controllers changed:(BOOL)changed;
-(void)tabBarController:(id)controller willEndCustomizingViewControllers:(id)controllers changed:(BOOL)changed;
-(void)tabBarController:(id)controller willBeginCustomizingViewControllers:(id)controllers;
-(void)tabBarController:(id)controller didSelectViewController:(id)controller2;
-(BOOL)tabBarController:(id)controller shouldSelectViewController:(id)controller2;
@end

@protocol FetchDelegate
-(void)stopSourceFetch:(id)fetch;
-(void)startSourceFetch:(id)fetch;
-(bool)isSourceCancelled;
@end

@protocol UIBarPositioningDelegate <NSObject>
@optional
-(int)positionForBar:(id)bar;
@end

@protocol UISearchBarDelegate <UIBarPositioningDelegate>
@optional
-(void)searchBar:(id)bar selectedScopeButtonIndexDidChange:(int)selectedScopeButtonIndex;
-(void)searchBarResultsListButtonClicked:(id)clicked;
-(void)searchBarCancelButtonClicked:(id)clicked;
-(void)searchBarBookmarkButtonClicked:(id)clicked;
-(void)searchBarSearchButtonClicked:(id)clicked;
-(BOOL)searchBar:(id)bar shouldChangeTextInRange:(NSRange)range replacementText:(id)text;
-(void)searchBar:(id)bar textDidChange:(id)text;
-(void)searchBarTextDidEndEditing:(id)searchBarText;
-(BOOL)searchBarShouldEndEditing:(id)searchBar;
-(void)searchBarTextDidBeginEditing:(id)searchBarText;
-(BOOL)searchBarShouldBeginEditing:(id)searchBar;
@end

@protocol SourceDelegate
-(void)setFetch:(id)fetch;
@end

@protocol ConfirmationControllerDelegate
-(void)queue;
-(void)confirmWithNavigationController:(id)navigationController;
-(void)cancelAndClear:(bool)clear;
@end

@protocol DatabaseDelegate
-(void)addProgressEventOnMainThread:(id)thread forTask:(id)task;
-(void)setConfigurationData:(id)data;
-(void)repairWithSelector:(SEL)selector;
@end

@protocol CydiaDelegate
-(void)reloadDataWithInvocation:(id)invocation;
-(void)showActionSheet:(id)sheet fromItem:(id)item;
-(void)removeProgressHUD:(id)hud;
-(id)addProgressHUD;
-(BOOL)addTrivialSource:(id)source;
-(void)addSource:(id)source;
-(void)syncData;
-(void)_saveConfig;
-(void)updateData;
-(void)loadData;
-(void)distUpgrade;
-(bool)requestUpdate;
-(BOOL)updating;
-(void)beginUpdate;
-(void)removePackage:(id)package;
-(void)installPackages:(id)packages;
-(void)installPackage:(id)package;
-(void)clearPackage:(id)package;
-(void)releaseNetworkActivityIndicator;
-(void)retainNetworkActivityIndicator;
-(void)saveState;
-(void)returnToCydia;
@end

__attribute__((visibility("hidden")))
@interface SDURLCache : NSURLCache {
	NSString* diskCachePath;
	NSMutableDictionary* diskCacheInfo;
	BOOL diskCacheInfoDirty;
	BOOL ignoreMemoryOnlyStoragePolicy;
	BOOL breakURLCacheCompatibility;
	unsigned diskCacheUsage;
	double minCacheInterval;
	NSOperationQueue* ioQueue;
	NSTimer* periodicMaintenanceTimer;
	NSOperation* periodicMaintenanceOperation;
}
@property(retain) NSOperation* periodicMaintenanceOperation;
@property(retain, nonatomic) NSOperationQueue* ioQueue;
@property(readonly, assign, nonatomic) NSMutableDictionary* diskCacheInfo;
@property(retain, nonatomic) NSString* diskCachePath;
@property(assign, nonatomic) BOOL breakURLCacheCompatibility;
@property(assign, nonatomic) BOOL ignoreMemoryOnlyStoragePolicy;
@property(assign, nonatomic) double minCacheInterval;
+(id)defaultCachePath;
+(id)expirationDateFromHeaders:(id)headers withStatusCode:(int)statusCode;
+(id)dateFromHttpDateString:(id)httpDateString;
+(id)cacheKeyForURL:(id)url;
+(id)canonicalRequestForRequest:(id)request;
-(void)dealloc;
-(BOOL)isCached:(id)cached;
-(void)removeAllCachedResponses;
-(void)removeCachedResponseForRequest:(id)request;
-(unsigned)currentDiskUsage;
-(id)cachedResponseForRequest:(id)request;
-(void)storeCachedResponse:(id)response forRequest:(id)request;
-(id)initWithMemoryCapacity:(unsigned)memoryCapacity diskCapacity:(unsigned)capacity diskPath:(id)path;
-(void)logEvent:(id)event forRequest:(id)request;
-(void)periodicMaintenance;
-(void)storeToDisk:(id)disk;
-(void)balanceDiskUsage;
-(void)removeCachedResponseForCachedKeys:(id)cachedKeys;
-(void)saveCacheInfo;
-(void)createDiskCachePath;
@end

__attribute__((visibility("hidden")))
@interface CYWebPolicyDecisionMediator : NSObject <WebPolicyDecisionListener> {
	id<WebPolicyDecisionListener> listener_;
	int decision_;
}
-(void)use;
-(void)ignore;
-(void)download;
-(bool)decide;
-(bool)decided;
-(int)decision;
-(id)initWithListener:(id)listener;
@end

__attribute__((visibility("hidden")))
@interface CyteWebView : UIWebView {
}
-(id)request;
-(void)setNeedsLayout;
-(id)scrollView;
-(void)reloadFromOrigin;
-(void)dispatchEvent:(id)event;
-(void)_updateViewSettings;
-(void)webViewClose:(id)close;
-(id)webView:(id)view runJavaScriptTextInputPanelWithPrompt:(id)prompt defaultText:(id)text initiatedByFrame:(id)frame;
-(BOOL)webView:(id)view runJavaScriptConfirmPanelWithMessage:(id)message initiatedByFrame:(id)frame;
-(void)webView:(id)view runJavaScriptAlertPanelWithMessage:(id)message initiatedByFrame:(id)frame;
-(id)webThreadWebView:(id)view resource:(id)resource willSendRequest:(id)request redirectResponse:(id)response fromDataSource:(id)dataSource;
-(id)webView:(id)view resource:(id)resource willSendRequest:(id)request redirectResponse:(id)response fromDataSource:(id)dataSource;
-(void)webView:(id)view resource:(id)resource didReceiveAuthenticationChallenge:(id)challenge fromDataSource:(id)dataSource;
-(void)webView:(id)view resource:(id)resource didCancelAuthenticationChallenge:(id)challenge fromDataSource:(id)dataSource;
-(void)webView:(id)view didStartProvisionalLoadForFrame:(id)frame;
-(void)webView:(id)view didReceiveTitle:(id)title forFrame:(id)frame;
-(void)webView:(id)view didFinishLoadForFrame:(id)frame;
-(void)webView:(id)view didFailProvisionalLoadWithError:(id)error forFrame:(id)frame;
-(void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;
-(void)webView:(id)view didCommitLoadForFrame:(id)frame;
-(void)webView:(id)view didClearWindowObject:(id)object forFrame:(id)frame;
-(void)webView:(id)view decidePolicyForNewWindowAction:(id)newWindowAction request:(id)request newFrameName:(id)name decisionListener:(id)listener;
-(void)webView:(id)view decidePolicyForNavigationAction:(id)navigationAction request:(id)request frame:(id)frame decisionListener:(id)listener;
-(void)webView:(id)view addMessageToConsole:(id)console;
-(void)setDelegate:(id)delegate;
-(id)delegate;
-(id)description;
-(void)dealloc;
-(id)initWithFrame:(CGRect)frame;
@end

__attribute__((visibility("hidden")))
@interface CyteViewController : UIViewController {
	id delegate_;
	BOOL loaded_;
	MenesObjectHandle<UIColor, 0> color_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(BOOL)shouldAutorotate;
-(BOOL)shouldAutorotateToInterfaceOrientation:(int)interfaceOrientation;
-(unsigned)supportedInterfaceOrientations;
-(void)setPageColor:(id)color;
-(id)navigationURL;
-(void)unloadData;
-(void)reloadData;
-(void)setView:(id)view;
-(void)releaseSubviews;
-(BOOL)hasLoaded;
-(void)viewWillAppear:(BOOL)view;
-(id)delegate;
-(void)setDelegate:(id)delegate;
@end

__attribute__((visibility("hidden")))
@interface CyteTableViewCellContentView : UIView {
	id<CyteTableViewCellDelegate> delegate_;
}
-(void)drawRect:(CGRect)rect;
-(void)setDelegate:(id)delegate;
-(id)delegate;
-(id)initWithFrame:(CGRect)frame;
@end

__attribute__((visibility("hidden")))
@interface CyteTableViewCell : UITableViewCell {
	MenesObjectHandle<CyteTableViewCellContentView, 1> content_;
	bool highlighted_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)setSelected:(BOOL)selected animated:(BOOL)animated;
-(void)_updateHighlightColorsForView:(id)view highlighted:(BOOL)highlighted;
@end

__attribute__((visibility("hidden")))
@interface CyteWebViewTableViewCell : UITableViewCell <CyteWebViewDelegate> {
	MenesObjectHandle<CyteWebView, 1> webview_;
}
+(id)cellWithRequest:(id)request;
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)setDelegate:(id)delegate;
-(id)delegate;
-(id)initWithRequest:(id)request;
@end

__attribute__((visibility("hidden")))
@interface IndirectDelegate : NSObject {
	id delegate_;
}
-(void)forwardInvocation:(id)invocation;
-(id)methodSignatureForSelector:(SEL)selector;
-(BOOL)respondsToSelector:(SEL)selector;
-(/*function-pointer*/ void*)methodForSelector:(SEL)selector;
-(id)initWithDelegate:(id)delegate;
-(void)setDelegate:(id)delegate;
-(id)delegate;
@end

__attribute__((visibility("hidden")))
@interface CyteWebViewController : CyteViewController <CyteWebViewDelegate, MFMailComposeViewControllerDelegate, UIWebViewDelegate> {
	MenesObjectHandle<CyteWebView, 1> webview_;
	UIScrollView* scroller_;
	MenesObjectHandle<UIActivityIndicatorView, 0> indicator_;
	MenesObjectHandle<IndirectDelegate, 1> indirect_;
	MenesObjectHandle<NSURLAuthenticationChallenge, 0> challenge_;
	bool error_;
	MenesObjectHandle<NSURLRequest, 0> request_;
	bool ready_;
	NSNumber* sensitive_;
	MenesObjectHandle<NSURL, 0> appstore_;
	MenesObjectHandle<NSString, 0> title_;
	MenesObjectHandle<NSMutableSet, 0> loading_;
	MenesObjectHandle<NSMutableSet, 0> registered_;
	MenesObjectHandle<NSTimer, 0> timer_;
	MenesObjectHandle<NSObject, 0> custom_;
	MenesObjectHandle<NSString, 0> style_;
	MenesObjectHandle<WebScriptObject, 0> function_;
	float width_;
	Class class_;
	MenesObjectHandle<UIBarButtonItem, 0> reloaditem_;
	MenesObjectHandle<UIBarButtonItem, 0> loadingitem_;
	bool visible_;
	bool hidesNavigationBar_;
	bool allowsNavigationAction_;
}
+(float)defaultWidth;
+(void)_lockJavaScript:(id)script;
+(void)_initialize;
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)registerFrame:(id)frame;
-(void)updateHeights:(id)heights;
-(void)viewDidDisappear:(BOOL)view;
-(void)viewWillDisappear:(BOOL)view;
-(void)viewDidAppear:(BOOL)view;
-(void)viewWillAppear:(BOOL)view;
-(void)setScrollIndicatorStyleWithName:(id)name;
-(void)setScrollIndicatorStyle:(int)style;
-(void)setScrollAlwaysBounceVerticalNumber:(id)number;
-(void)setScrollAlwaysBounceVertical:(bool)vertical;
-(void)setHidesNavigationBarByNumber:(id)number;
-(void)setHidesNavigationBar:(bool)bar;
-(void)_setHidesNavigationBar:(bool)bar animated:(bool)animated;
-(bool)hidesNavigationBar;
-(void)dispatchEvent:(id)event;
-(void)setHidesBackButtonByNumber:(id)number;
-(void)setHidesBackButton:(bool)button;
-(void)setBadgeValue:(id)value;
-(void)setNavigationBarTintColor:(id)color;
-(void)setNavigationBarStyle:(id)style;
-(void)customButtonClicked;
-(void)_customButtonClicked;
-(void)reloadButtonClicked;
-(void)callFunction:(id)function;
-(id)initWithRequest:(id)request;
-(id)initWithURL:(id)url;
-(id)init;
-(id)initWithWidth:(float)width;
-(void)releaseSubviews;
-(void)loadView;
-(id)applicationNameForUserAgent;
-(id)initWithWidth:(float)width ofClass:(Class)aClass;
-(bool)isLoading;
-(void)_didFinishLoading;
-(void)didFinishLoading;
-(void)_didStartLoading;
-(void)didStartLoading;
-(void)applyRightButton;
-(void)layoutRightButton;
-(void)applyLoadingTitle;
-(id)rightButton;
-(void)applyLeftButton;
-(id)leftButton;
-(id)customButton;
-(int)rightButtonStyle;
-(void)alertView:(id)view clickedButtonAtIndex:(int)index;
-(void)close;
-(void)webViewClose:(id)close;
-(bool)webView:(id)view shouldRunJavaScriptTextInputPanelWithPrompt:(id)prompt defaultText:(id)text initiatedByFrame:(id)frame;
-(bool)webView:(id)view shouldRunJavaScriptConfirmPanelWithMessage:(id)message initiatedByFrame:(id)frame;
-(bool)webView:(id)view shouldRunJavaScriptAlertPanelWithMessage:(id)message initiatedByFrame:(id)frame;
-(id)webThreadWebView:(id)view resource:(id)resource willSendRequest:(id)request redirectResponse:(id)response fromDataSource:(id)dataSource;
-(id)webView:(id)view resource:(id)resource willSendRequest:(id)request redirectResponse:(id)response fromDataSource:(id)dataSource;
-(void)webView:(id)view resource:(id)resource didReceiveAuthenticationChallenge:(id)challenge fromDataSource:(id)dataSource;
-(void)webView:(id)view didStartProvisionalLoadForFrame:(id)frame;
-(void)webView:(id)view didReceiveTitle:(id)title forFrame:(id)frame;
-(void)webView:(id)view didFinishLoadForFrame:(id)frame;
-(void)webView:(id)view didFailProvisionalLoadWithError:(id)error forFrame:(id)frame;
-(void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;
-(void)webView:(id)view didCommitLoadForFrame:(id)frame;
-(void)webView:(id)view didClearWindowObject:(id)object forFrame:(id)frame;
-(void)webView:(id)view decidePolicyForNewWindowAction:(id)newWindowAction request:(id)request newFrameName:(id)name decisionListener:(id)listener;
-(void)webView:(id)view didDecidePolicy:(int)policy forNavigationAction:(id)navigationAction request:(id)request frame:(id)frame;
-(void)webView:(id)view decidePolicyForNavigationAction:(id)navigationAction request:(id)request frame:(id)frame decisionListener:(id)listener;
-(void)webView:(id)view addMessageToConsole:(id)console;
-(void)pushRequest:(id)request forAction:(id)action asPop:(bool)pop;
-(void)_didFailWithError:(id)error forFrame:(id)frame;
-(void)popViewControllerWithNumber:(id)number;
-(void)setAllowsNavigationActionByNumber:(id)number;
-(void)setAllowsNavigationAction:(bool)action;
-(bool)allowsNavigationAction;
-(bool)_allowJavaScriptPanel;
-(void)_openMailToURL:(id)url;
-(void)_setupMail:(id)mail;
-(void)mailComposeController:(id)controller didFinishWithResult:(int)result error:(id)error;
-(void)webViewUpdateViewSettings:(id)settings;
-(void)setViewportWidthOnMainThread:(float)thread;
-(void)_setViewportWidthOnMainThread:(id)thread;
-(void)setViewportWidth:(float)width;
-(void)_setViewportWidth;
-(void)scrollToBottomAnimated:(id)bottomAnimated;
-(void)removeButton;
-(void)setButtonTitle:(id)title withStyle:(id)style toFunction:(id)function;
-(void)setButtonImage:(id)image withStyle:(id)style toFunction:(id)function;
-(void)reloadData;
-(void)reloadURLWithCache:(BOOL)cache;
-(void)loadRequest:(id)request;
-(void)loadURL:(id)url;
-(void)loadURL:(id)url cachePolicy:(unsigned)policy;
-(void)setURL:(id)url withReferrer:(id)referrer;
-(void)setURL:(id)url;
-(void)setRequest:(id)request;
-(id)requestWithURL:(id)url cachePolicy:(unsigned)policy referrer:(id)referrer;
-(id)URLWithURL:(id)url;
-(id)webView;
-(id)description;
-(void)dealloc;
-(void)releaseNetworkActivityIndicator;
-(bool)retainsNetworkActivityIndicator;
@end

__attribute__((visibility("hidden")))
@interface CyteTabBarController : UITabBarController {
	UIViewController* transient_;
	MenesObjectHandle<UIViewController, 0> remembered_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(BOOL)shouldAutorotate;
-(BOOL)shouldAutorotateToInterfaceOrientation:(int)interfaceOrientation;
-(unsigned)supportedInterfaceOrientations;
-(void)unloadData;
-(id)unselectedViewController;
-(void)setUnselectedViewController:(id)controller;
-(void)dismissModalViewControllerAnimated:(BOOL)animated;
-(void)tabBarController:(id)controller didSelectViewController:(id)controller2;
-(void)didReceiveMemoryWarning;
@end

__attribute__((visibility("hidden")))
@interface CydiaLoadingViewController : CyteViewController {
}
-(void)loadView;
@end

__attribute__((visibility("hidden")))
@interface CydiaLoadingView : UIView {
	MenesObjectHandle<UIActivityIndicatorView, 0> spinner_;
	MenesObjectHandle<UILabel, 0> label_;
	MenesObjectHandle<UIView, 0> container_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(id)initWithFrame:(CGRect)frame;
@end

__attribute__((visibility("hidden")))
@interface MIMEAddress : NSObject {
	MenesObjectHandle<NSString, 0> name_;
	MenesObjectHandle<NSString, 0> address_;
}
+(BOOL)isKeyExcludedFromWebScript:(const char*)webScript;
+(id)_attributeKeys;
+(id)addressWithString:(id)string;
-(id).cxx_construct;
-(void).cxx_destruct;
-(id)initWithString:(id)string;
-(id)attributeKeys;
-(void)setAddress:(id)address;
-(id)address;
-(id)name;
@end

__attribute__((visibility("hidden")))
@interface CydiaProgressEvent : NSObject {
	MenesObjectHandle<NSString, 0> message_;
	MenesObjectHandle<NSString, 0> type_;
	MenesObjectHandle<NSArray, 0> item_;
	MenesObjectHandle<NSString, 0> package_;
	MenesObjectHandle<NSString, 0> url_;
	MenesObjectHandle<NSString, 0> version_;
}
+(BOOL)isKeyExcludedFromWebScript:(const char*)webScript;
+(id)_attributeKeys;
+(id)eventWithMessage:(id)message ofType:(id)type forItemDesc:(ItemDesc*)itemDesc;
+(id)eventWithMessage:(id)message ofType:(id)type forPackage:(id)package;
+(id)eventWithMessage:(id)message ofType:(id)type;
-(id).cxx_construct;
-(void).cxx_destruct;
-(id)compoundTitle;
-(id)compoundMessage;
-(id)compound:(id)compound;
-(id)version;
-(void)setVersion:(id)version;
-(void)setURL:(id)url;
-(id)url;
-(void)setPackage:(id)package;
-(id)package;
-(void)setItem:(id)item;
-(id)item;
-(id)type;
-(id)message;
-(id)initWithMessage:(id)message ofType:(id)type;
-(id)attributeKeys;
@end

__attribute__((visibility("hidden")))
@interface Source : NSObject {
	unsigned era_;
	Database* database_;
	metaIndex* index_;
	CYString depiction_;
	CYString description_;
	CYString label_;
	CYString origin_;
	CYString support_;
	CYString uri_;
	CYString distribution_;
	CYString type_;
	CYString base_;
	CYString version_;
	MenesObjectHandle<NSString, 0> host_;
	MenesObjectHandle<NSString, 0> authority_;
	CYString defaultIcon_;
	MenesObjectHandle<NSMutableDictionary, 0> record_;
	BOOL trusted_;
	set<std::basic_string<char>, std::less<std::basic_string<char> >, std::allocator<std::basic_string<char> > > fetches_;
	set<std::basic_string<char>, std::less<std::basic_string<char> >, std::allocator<std::basic_string<char> > > files_;
	NSObject<SourceDelegate>* delegate_;
}
+(BOOL)isKeyExcludedFromWebScript:(const char*)webScript;
+(id)_attributeKeys;
+(BOOL)isSelectorExcludedFromWebScript:(SEL)webScript;
+(id)webScriptNameForSelector:(SEL)selector;
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)resetFetch;
-(void)setFetch:(bool)fetch forURI:(const char*)uri;
-(bool)fetch;
-(void)setDelegate:(id)delegate;
-(id)defaultIcon;
-(id)version;
-(id)origin;
-(id)label;
-(id)shortDescription;
-(id)name;
-(id)host;
-(id)key;
-(id)iconURL;
-(id)iconuri;
-(id)baseuri;
-(id)type;
-(id)distribution;
-(id)rooturi;
-(BOOL)trusted;
-(id)record;
-(bool)remove;
-(void)_remove;
-(bool)removeSection:(id)section;
-(void)_removeSection:(id)section;
-(bool)addSection:(id)section;
-(void)_addSection:(id)section;
-(id)sections;
-(id)supportForPackage:(id)package;
-(id)depictionForPackage:(id)package;
-(int)compareByName:(id)name;
-(id)getField:(id)field;
-(id)initWithMetaIndex:(metaIndex*)metaIndex forDatabase:(id)database inPool:(CYPool*)pool;
-(void)setMetaIndex:(metaIndex*)index inPool:(CYPool*)pool;
-(metaIndex*)metaIndex;
-(id)attributeKeys;
@end

__attribute__((visibility("hidden")))
@interface CydiaOperation : NSObject {
	MenesObjectHandle<NSString, 0> operator_;
	MenesObjectHandle<NSString, 0> value_;
}
+(BOOL)isKeyExcludedFromWebScript:(const char*)webScript;
+(id)_attributeKeys;
-(id).cxx_construct;
-(void).cxx_destruct;
-(id)value;
-(id)operator;
-(id)attributeKeys;
-(id)initWithOperator:(const char*)anOperator value:(const char*)value;
@end

__attribute__((visibility("hidden")))
@interface CydiaClause : NSObject {
	MenesObjectHandle<NSString, 0> package_;
	MenesObjectHandle<CydiaOperation, 0> version_;
}
+(BOOL)isKeyExcludedFromWebScript:(const char*)webScript;
+(id)_attributeKeys;
-(id).cxx_construct;
-(void).cxx_destruct;
-(id)version;
-(id)package;
-(id)attributeKeys;
-(id)initWithIterator:(DepIterator*)iterator;
@end

__attribute__((visibility("hidden")))
@interface CydiaRelation : NSObject {
	MenesObjectHandle<NSString, 0> relationship_;
	MenesObjectHandle<NSMutableArray, 0> clauses_;
}
+(BOOL)isKeyExcludedFromWebScript:(const char*)webScript;
+(id)_attributeKeys;
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)addClause:(id)clause;
-(id)clauses;
-(id)relationship;
-(id)attributeKeys;
-(id)initWithIterator:(DepIterator*)iterator;
@end

__attribute__((visibility("hidden")))
@interface Package : NSObject {
	unsigned era_ : 25;
	unsigned role_ : 3;
	unsigned essential_ : 1;
	unsigned obsolete_ : 1;
	unsigned ignored_ : 1;
	unsigned pooled_ : 1;
	CYPool* pool_;
	unsigned rank_;
	Database* database_;
	VerIterator version_;
	PkgIterator iterator_;
	VerFileIterator file_;
	CYString id_;
	CYString name_;
	CYString transform_;
	CYString latest_;
	CYString installed_;
	long upgraded_;
	const char* section_;
	NSString* section$_;
	MenesObjectHandle<Source, 0> source_;
	PackageValue* metadata_;
	ParsedPackage* parsed_;
	MenesObjectHandle<NSMutableArray, 0> tags_;
}
+(id)packageWithIterator:(PkgIterator)iterator withZone:(NSZone*)zone inPool:(CYPool*)pool database:(id)database;
+(BOOL)isKeyExcludedFromWebScript:(const char*)webScript;
+(id)_attributeKeys;
+(BOOL)isSelectorExcludedFromWebScript:(SEL)webScript;
+(id)webScriptNameForSelector:(SEL)selector;
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)remove;
-(void)install;
-(void)clear;
-(unsigned)compareBySection:(id)section;
-(CYString*)cyname;
-(void)setIndex:(unsigned long)index;
-(bool)isCommercial;
-(id)purposes;
-(id)primaryPurpose;
-(BOOL)hasTag:(id)tag;
-(id)tags;
-(BOOL)matches:(id)matches;
-(unsigned)rank;
-(unsigned)recent;
-(long)upgraded;
-(id)source;
-(id)applications;
-(id)warnings;
-(id)selection;
-(id)state;
-(id)files;
-(id)support;
-(id)author;
-(id)depiction;
-(id)homepage;
-(id)icon;
-(id)name;
-(id)id;
-(id)mode;
-(BOOL)hasMode;
-(BOOL)halfInstalled;
-(BOOL)halfConfigured;
-(BOOL)half;
-(BOOL)visible;
-(BOOL)unfiltered;
-(BOOL)broken;
-(BOOL)essential;
-(BOOL)upgradableAndEssential:(BOOL)essential;
-(BOOL)uninstalled;
-(id)installed;
-(id)latest;
-(BOOL)ignored;
-(bool)setSubscribed:(bool)subscribed;
-(bool)subscribed;
-(long)seen;
-(PackageValue*)metadata;
-(unsigned short)index;
-(id)shortDescription;
-(id)longDescription;
-(unsigned long)size;
-(id)md5sum;
-(id)maintainer;
-(id)uri;
-(id)shortSection;
-(id)longSection;
-(id)simpleSection;
-(id)section;
-(id)downgrades;
-(PkgIterator)iterator;
-(id)initWithVersion:(VerIterator)version withZone:(NSZone*)zone inPool:(CYPool*)pool database:(id)database;
-(void)parse;
-(id)getRecord;
-(id)getField:(id)field;
-(id)architecture;
-(id)relations;
-(id)attributeKeys;
-(void)dealloc;
-(id)description;
@end

__attribute__((visibility("hidden")))
@interface Section : NSObject {
	MenesObjectHandle<NSString, 0> name_;
	unsigned long row_;
	unsigned long count_;
	MenesObjectHandle<NSString, 0> localized_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(id)localized;
-(void)setCount:(unsigned long)count;
-(void)addToCount;
-(void)addToRow;
-(unsigned long)count;
-(unsigned long)row;
-(void)setName:(id)name;
-(id)name;
-(id)initWithName:(id)name row:(unsigned long)row localize:(BOOL)localize;
-(id)initWithName:(id)name localize:(BOOL)localize;
-(id)initWithName:(id)name localized:(id)localized;
-(int)compareByLocalized:(id)localized;
@end

__attribute__((visibility("hidden")))
@interface Database : NSObject {
	NSZone* zone_;
	CYPool pool_;
	unsigned era_;
	MenesObjectHandle<NSDate, 0> delock_;
	pkgCacheFile cache_;
	Policy* policy_;
	pkgRecords* records_;
	pkgProblemResolver* resolver_;
	pkgAcquire* fetcher_;
	FileFd* lock_;
	SPtr<pkgPackageManager> manager_;
	pkgSourceList* list_;
	map<unsigned long, MenesObjectHandle<Source, 0>, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, MenesObjectHandle<Source, 0> > > > sourceMap_;
	MenesObjectHandle<NSMutableArray, 0> sourceList_;
	CFArrayRef packages_;
	NSObject<DatabaseDelegate>* delegate_;
	NSObject<ProgressDelegate>* progress_;
	CydiaStatus status_;
	int cydiafd_;
	int statusfd_;
	FILE* input_;
	map<const char *, MenesObjectHandle<NSString, 0>, std::less<const char *>, std::allocator<std::pair<const char *const, MenesObjectHandle<NSString, 0> > > > sections_;
}
+(id)sharedInstance;
-(id).cxx_construct;
-(void).cxx_destruct;
-(id)mappedSectionForPointer:(const char*)pointer;
-(void)resetFetch;
-(void)setFetch:(bool)fetch forURI:(const char*)uri;
-(id)getSource:(PkgFileIterator)source;
-(id)progressDelegate;
-(void)setProgressDelegate:(id)delegate;
-(void)setDelegate:(id)delegate;
-(void)updateWithStatus:(CancelStatus*)status;
-(void)update;
-(bool)upgrade;
-(bool)delocked;
-(void)perform;
-(bool)prepare;
-(bool)clean;
-(void)configure;
-(void)clear;
-(void)reloadDataWithInvocation:(id)invocation;
-(bool)popErrorWithTitle:(id)title forReadList:(pkgSourceList*)readList;
-(bool)popErrorWithTitle:(id)title forOperation:(bool)operation;
-(bool)popErrorWithTitle:(id)title;
-(id)sourceWithKey:(id)key;
-(id)sources;
-(id)packages;
-(pkgSourceList*)list;
-(pkgAcquire*)fetcher;
-(pkgProblemResolver*)resolver;
-(pkgRecords*)records;
-(Policy*)policy;
-(pkgCacheFile*)cache;
-(id)init;
-(id)packageWithName:(id)name;
-(FILE*)input;
-(void)_readOutput:(id)output;
-(void)_readStatus:(id)status;
-(void)_readCydia:(id)cydia;
-(void)dealloc;
-(bool)hasPackages;
-(void)releasePackages;
-(unsigned)era;
@end

__attribute__((visibility("hidden")))
@interface Diversion : NSObject {
	RegEx pattern_;
	MenesObjectHandle<NSString, 0> key_;
	MenesObjectHandle<NSString, 0> format_;
}
+(id)divertURL:(id)url;
-(id).cxx_construct;
-(void).cxx_destruct;
-(BOOL)isEqual:(id)equal;
-(unsigned)hash;
-(id)key;
-(id)divert:(id)divert;
-(id)initWithFrom:(id)from to:(id)to;
@end

__attribute__((visibility("hidden")))
@interface CydiaObject : NSObject {
	MenesObjectHandle<CyteWebViewController, 0> indirect_;
	id delegate_;
}
+(BOOL)isSelectorExcludedFromWebScript:(SEL)webScript;
+(id)webScriptNameForSelector:(SEL)selector;
+(BOOL)isKeyExcludedFromWebScript:(const char*)webScript;
+(id)_attributeKeys;
-(id).cxx_construct;
-(void).cxx_destruct;
-(id)localizedStringForKey:(id)key value:(id)value table:(id)table;
-(id)stringWithFormat:(id)format arguments:(id)arguments;
-(void)setViewportWidth:(float)width;
-(void)scrollToBottom:(id)bottom;
-(void)setToken:(id)token;
-(void)setPasteboardURL:(id)url;
-(void)setPasteboardString:(id)string;
-(void)setNavigationBarTintRed:(id)red green:(id)green blue:(id)blue alpha:(id)alpha;
-(void)setNavigationBarStyle:(id)style;
-(void)setHidesNavigationBar:(id)bar;
-(void)setHidesBackButton:(id)button;
-(void)setAllowsNavigationAction:(id)action;
-(void)setBadgeValue:(id)value;
-(void)setButtonTitle:(id)title withStyle:(id)style toFunction:(id)function;
-(void)setButtonImage:(id)image withStyle:(id)style toFunction:(id)function;
-(void)removeButton;
-(id)substitutePackageNames:(id)names;
-(void)installPackages:(id)packages;
-(id)isReachable:(id)reachable;
-(void)close;
-(id)du:(id)du;
-(id)statfs:(id)statfs;
-(id)getPreferredLanguages;
-(id)getLocaleIdentifier;
-(id)getPackageById:(id)anId;
-(id)getInstalledPackages;
-(id)getAllSources;
-(void)saveConfig;
-(void)refreshSources;
-(BOOL)addTrivialSource:(id)source;
-(void)addSource:(id)source :(id)arg2 :(id)arg3;
-(void)popViewController:(id)controller;
-(void)addPipelinedHost:(id)host scheme:(id)scheme;
-(void)addInsecureHost:(id)host;
-(void)addBridgedHost:(id)host;
-(void)setSessionValue:(id)value :(id)arg2;
-(id)getSessionValue:(id)value;
-(void)setMetadataValue:(id)value :(id)arg2;
-(id)getMetadataValue:(id)value;
-(void)registerFrame:(id)frame;
-(id)getMetadataKeys;
-(id)getIORegistryEntry:(id)entry :(id)arg2;
-(id)getKernelString:(id)string;
-(id)getKernelNumber:(id)number;
-(id)getLocalizedNameForDisplayIdentifier:(id)displayIdentifier;
-(id)getDisplayIdentifiers;
-(id)getApplicationInfo:(id)info value:(id)value;
-(void)addInternalRedirect:(id)redirect :(id)arg2;
-(void)setScrollIndicatorStyle:(id)style;
-(void)setScrollAlwaysBounceVertical:(id)vertical;
-(void)unload;
-(BOOL)supports:(id)supports;
-(id)model;
-(id)role;
-(id)serial;
-(id)ecid;
-(id)bbsnum;
-(id)operator;
-(id)mnc;
-(id)mcc;
-(id)cells;
-(id)idiom;
-(id)hostname;
-(id)firmware;
-(id)device;
-(id)coreFoundationVersionNumber;
-(id)build;
-(unsigned)bittage;
-(id)version;
-(id)attributeKeys;
-(void)setDelegate:(id)delegate;
-(id)initWithDelegate:(id)delegate;
@end

__attribute__((visibility("hidden")))
@interface CydiaWebViewController : CyteWebViewController {
	MenesObjectHandle<CydiaObject, 0> cydia_;
}
+(id)requestWithHeaders:(id)headers;
+(void)didClearWindowObject:(id)object forFrame:(id)frame withCydia:(id)cydia;
+(void)addDiversion:(id)diversion;
+(void)_initialize;
-(id).cxx_construct;
-(void).cxx_destruct;
-(id)init;
-(id)applicationNameForUserAgent;
-(void)setDelegate:(id)delegate;
-(id)webThreadWebView:(id)view resource:(id)resource willSendRequest:(id)request redirectResponse:(id)response fromDataSource:(id)dataSource;
-(id)webView:(id)view resource:(id)resource willSendRequest:(id)request redirectResponse:(id)response fromDataSource:(id)dataSource;
-(id)URLWithURL:(id)url;
-(void)_setupMail:(id)mail;
-(void)webView:(id)view didClearWindowObject:(id)object forFrame:(id)frame;
-(id)navigationURL;
@end

__attribute__((visibility("hidden")))
@interface AppCacheController : CydiaWebViewController {
}
-(bool)retainsNetworkActivityIndicator;
-(void)didReceiveMemoryWarning;
@end

__attribute__((visibility("hidden")))
@interface ConfirmationController : CydiaWebViewController {
	Database* database_;
	MenesObjectHandle<UIAlertView, 0> essential_;
	MenesObjectHandle<NSDictionary, 0> changes_;
	MenesObjectHandle<NSMutableArray, 0> issues_;
	MenesObjectHandle<NSDictionary, 0> sizes_;
	BOOL substrate_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)confirmButtonClicked;
-(void)cancelButtonClicked;
-(void)applyRightButton;
-(id)leftButton;
-(id)initWithDatabase:(id)database;
-(void)webView:(id)view didClearWindowObject:(id)object forFrame:(id)frame;
-(id)invokeDefaultMethodWithArguments:(id)arguments;
-(void)_doContinue;
-(void)alertView:(id)view clickedButtonAtIndex:(int)index;
-(void)complete;
@end

__attribute__((visibility("hidden")))
@interface CydiaProgressData : NSObject {
	id delegate_;
	bool running_;
	float percent_;
	float current_;
	float total_;
	float speed_;
	MenesObjectHandle<NSMutableArray, 0> events_;
	MenesObjectHandle<NSString, 0> title_;
	MenesObjectHandle<NSString, 0> status_;
	MenesObjectHandle<NSString, 0> finish_;
}
+(BOOL)isKeyExcludedFromWebScript:(const char*)webScript;
+(id)_attributeKeys;
-(id).cxx_construct;
-(void).cxx_destruct;
-(id)running;
-(void)setRunning:(bool)running;
-(id)finish;
-(void)setFinish:(id)finish;
-(id)title;
-(void)setTitle:(id)title;
-(void)addEvent:(id)event;
-(void)removeAllEvents;
-(id)events;
-(id)speed;
-(void)setSpeed:(float)speed;
-(id)total;
-(void)setTotal:(float)total;
-(id)current;
-(void)setCurrent:(float)current;
-(id)percent;
-(void)setPercent:(float)percent;
-(void)setDelegate:(id)delegate;
-(id)delegate;
-(id)init;
-(id)attributeKeys;
@end

__attribute__((visibility("hidden")))
@interface ProgressController : CydiaWebViewController <ProgressDelegate> {
	Database* database_;
	MenesObjectHandle<CydiaProgressData, 1> progress_;
	unsigned cancel_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)setProgressStatus:(id)status;
-(void)setProgressPercent:(id)percent;
-(void)setProgressCancellable:(id)cancellable;
-(void)setCancellable:(bool)cancellable;
-(void)cancel;
-(bool)isProgressCancelled;
-(void)addProgressEvent:(id)event;
-(void)invoke:(id)invoke withTitle:(id)title;
-(id)rightButton;
-(void)setTitle:(id)title;
-(void)close;
-(void)viewWillAppear:(BOOL)view;
-(void)updateProgress;
-(void)webView:(id)view didClearWindowObject:(id)object forFrame:(id)frame;
-(id)initWithDatabase:(id)database delegate:(id)delegate;
-(void)updateCancel;
-(id)leftButton;
-(void)dealloc;
@end

__attribute__((visibility("hidden")))
@interface PackageCell : CyteTableViewCell <CyteTableViewCellDelegate> {
	MenesObjectHandle<UIImage, 0> icon_;
	MenesObjectHandle<NSString, 0> name_;
	MenesObjectHandle<NSString, 0> description_;
	bool commercial_;
	MenesObjectHandle<NSString, 0> source_;
	MenesObjectHandle<UIImage, 0> badge_;
	MenesObjectHandle<UIImage, 0> placard_;
	bool summarized_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)drawContentRect:(CGRect)rect;
-(void)drawNormalContentRect:(CGRect)rect;
-(void)drawSummaryContentRect:(CGRect)rect;
-(void)setPackage:(id)package asSummary:(bool)summary;
-(id)accessibilityLabel;
-(id)init;
@end

__attribute__((visibility("hidden")))
@interface SectionCell : CyteTableViewCell <CyteTableViewCellDelegate> {
	MenesObjectHandle<NSString, 0> basic_;
	MenesObjectHandle<NSString, 0> section_;
	MenesObjectHandle<NSString, 0> name_;
	MenesObjectHandle<NSString, 0> count_;
	MenesObjectHandle<UIImage, 0> icon_;
	MenesObjectHandle<UISwitch, 0> switch_;
	BOOL editing_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)drawContentRect:(CGRect)rect;
-(id)accessibilityLabel;
-(void)setFrame:(CGRect)frame;
-(void)setSection:(id)section editing:(BOOL)editing;
-(void)onSwitch:(id)aSwitch;
-(id)initWithFrame:(CGRect)frame reuseIdentifier:(id)identifier;
@end

__attribute__((visibility("hidden")))
@interface FileTable : CyteViewController <UITableViewDataSource, UITableViewDelegate> {
	Database* database_;
	MenesObjectHandle<Package, 0> package_;
	MenesObjectHandle<NSString, 0> name_;
	MenesObjectHandle<NSMutableArray, 0> files_;
	MenesObjectHandle<UITableView, 2> list_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)reloadData;
-(void)setPackage:(id)package;
-(id)initWithDatabase:(id)database;
-(void)releaseSubviews;
-(void)viewDidLoad;
-(void)loadView;
-(id)navigationURL;
-(id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;
-(int)tableView:(id)view numberOfRowsInSection:(int)section;
@end

__attribute__((visibility("hidden")))
@interface CYPackageController : CydiaWebViewController <UIActionSheetDelegate> {
	Database* database_;
	MenesObjectHandle<Package, 0> package_;
	MenesObjectHandle<NSString, 0> name_;
	bool commercial_;
	vector<std::pair<MenesObjectHandle<NSString, 0>, MenesObjectHandle<NSString, 0> >, std::allocator<std::pair<MenesObjectHandle<NSString, 0>, MenesObjectHandle<NSString, 0> > > > buttons_;
	MenesObjectHandle<UIActionSheet, 0> sheet_;
	MenesObjectHandle<UIBarButtonItem, 0> button_;
	MenesObjectHandle<NSArray, 0> versions_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(bool)isLoading;
-(void)reloadData;
-(id)initWithDatabase:(id)database forPackage:(id)package withReferrer:(id)referrer;
-(void)setPageColor:(id)color;
-(id)rightButton;
-(void)applyLoadingTitle;
-(void)reloadButtonClicked;
-(void)_customButtonClicked;
-(bool)_allowJavaScriptPanel;
-(void)actionSheet:(id)sheet clickedButtonAtIndex:(int)index;
-(void)_clickButtonWithName:(id)name;
-(void)_clickButtonWithPackage:(id)package;
-(id)navigationURL;
@end

__attribute__((visibility("hidden")))
@interface PackageListController : CyteViewController <UITableViewDataSource, UITableViewDelegate> {
	Database* database_;
	unsigned era_;
	MenesObjectHandle<NSArray, 0> packages_;
	MenesObjectHandle<NSArray, 0> sections_;
	MenesObjectHandle<UITableView, 2> list_;
	MenesObjectHandle<NSArray, 0> thumbs_;
	vector<int, std::allocator<int> > offset_;
	MenesObjectHandle<NSString, 0> title_;
	unsigned reloading_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)clearData;
-(void)resetCursor;
-(void)reloadData;
-(id)sectionsForPackages:(id)packages;
-(void)_reloadData;
-(id)_reloadPackages;
-(bool)shouldBlock;
-(bool)shouldYield;
-(void)setDelegate:(id)delegate;
-(void)releaseSubviews;
-(void)loadView;
-(id)initWithDatabase:(id)database title:(id)title;
-(void)updateHeight;
-(int)tableView:(id)view sectionForSectionIndexTitle:(id)sectionIndexTitle atIndex:(int)index;
-(id)sectionIndexTitlesForTableView:(id)tableView;
-(void)tableView:(id)view didSelectRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;
-(id)packageAtIndexPath:(id)indexPath;
-(int)tableView:(id)view numberOfRowsInSection:(int)section;
-(id)tableView:(id)view titleForHeaderInSection:(int)section;
-(int)numberOfSectionsInTableView:(id)tableView;
-(void)didSelectPackage:(id)package;
-(void)viewDidAppear:(BOOL)view;
-(void)viewWillDisappear:(BOOL)view;
-(void)viewWillAppear:(BOOL)view;
-(void)keyboardWillHide:(id)keyboard;
-(void)keyboardWillShow:(id)keyboard;
-(void)getKeyboardCurve:(int*)curve duration:(double*)duration forNotification:(id)notification;
-(void)resizeForKeyboardBounds:(CGRect)keyboardBounds;
-(void)resizeForKeyboardBounds:(CGRect)keyboardBounds duration:(double)duration;
-(void)resizeForKeyboardBounds:(CGRect)keyboardBounds duration:(double)duration curve:(int)curve;
-(void)deselectWithAnimation:(BOOL)animation;
-(bool)showsSections;
-(bool)isSummarized;
-(id)referrerURL;
@end

__attribute__((visibility("hidden")))
@interface FilteredPackageListController : PackageListController {
	Function<bool, Package *> filter_;
	Function<void, NSMutableArray *> sorter_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(id)initWithDatabase:(id)database title:(id)title filter:(Function<bool, Package *>)filter;
-(id)_reloadPackages;
-(void)setSorter:(Function<void, NSMutableArray *>)sorter;
-(void)setFilter:(Function<bool, Package *>)filter;
@end

__attribute__((visibility("hidden")))
@interface HomeController : CydiaWebViewController {
	CFRunLoopRef runloop_;
	SCNetworkReachabilityRef reachability_;
}
-(id)leftButton;
-(void)aboutButtonClicked;
-(id)navigationURL;
-(void)dealloc;
-(id)init;
@end

__attribute__((visibility("hidden")))
@interface CydiaTabBarController : CyteTabBarController <UITabBarControllerDelegate, FetchDelegate> {
	Database* database_;
	MenesObjectHandle<UIActivityIndicatorView, 0> indicator_;
	bool updating_;
	NSObject<CydiaDelegate>* updatedelegate_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)setUpdateDelegate:(id)delegate;
-(void)stopSourceFetch:(id)fetch;
-(void)startSourceFetch:(id)fetch;
-(bool)isSourceCancelled;
-(BOOL)updating;
-(void)cancelPressed;
-(void)cancelUpdate;
-(void)completeUpdate;
-(void)stopUpdateWithSelector:(SEL)selector;
-(void)performUpdate;
-(void)beginUpdate;
-(id)initWithDatabase:(id)database;
-(id)navigationURLCollection;
@end

__attribute__((visibility("hidden")))
@interface CydiaURLProtocol : NSURLProtocol {
}
+(id)canonicalRequestForRequest:(id)request;
+(BOOL)canInitWithRequest:(id)request;
-(void)stopLoading;
-(void)startLoading;
-(void)_returnPNGWithImage:(id)image forRequest:(id)request;
@end

__attribute__((visibility("hidden")))
@interface SectionController : FilteredPackageListController {
	MenesObjectHandle<NSString, 0> key_;
	MenesObjectHandle<NSString, 0> section_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)reloadData;
-(id)initWithDatabase:(id)database source:(id)source section:(id)section;
-(id)navigationURL;
-(id)referrerURL;
@end

__attribute__((visibility("hidden")))
@interface SectionsController : CyteViewController <UITableViewDataSource, UITableViewDelegate> {
	Database* database_;
	MenesObjectHandle<NSString, 0> key_;
	MenesObjectHandle<NSMutableArray, 0> sections_;
	MenesObjectHandle<NSMutableArray, 0> filtered_;
	MenesObjectHandle<UITableView, 2> list_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)editButtonClicked;
-(void)reloadData;
-(id)initWithDatabase:(id)database source:(id)source;
-(void)releaseSubviews;
-(void)viewDidLoad;
-(void)loadView;
-(void)tableView:(id)view didSelectRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;
-(int)tableView:(id)view numberOfRowsInSection:(int)section;
-(id)sectionAtIndexPath:(id)indexPath;
-(void)viewWillDisappear:(BOOL)view;
-(void)viewDidAppear:(BOOL)view;
-(void)setEditing:(BOOL)editing animated:(BOOL)animated;
-(void)updateNavigationItem;
-(id)source;
-(id)navigationURL;
@end

__attribute__((visibility("hidden")))
@interface ChangesController : FilteredPackageListController {
	unsigned upgrades_;
}
-(id)sectionsForPackages:(id)packages;
-(void)reloadData;
-(void)viewWillAppear:(BOOL)view;
-(void)viewDidLoad;
-(id)initWithDatabase:(id)database;
-(void)useFilter;
-(bool)shouldBlock;
-(bool)shouldYield;
-(void)upgradeButtonClicked;
-(void)cancelButtonClicked;
-(void)refreshButtonClicked;
-(void)setLeftBarButtonItem;
-(void)alertView:(id)view clickedButtonAtIndex:(int)index;
-(id)packageAtIndexPath:(id)indexPath;
-(id)navigationURL;
-(id)referrerURL;
@end

__attribute__((visibility("hidden")))
@interface SearchController : FilteredPackageListController <UISearchBarDelegate> {
	MenesObjectHandle<UISearchBar, 1> search_;
	BOOL searchloaded_;
	bool summary_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)didSelectPackage:(id)package;
-(void)reloadData;
-(void)viewDidAppear:(BOOL)view;
-(id)initWithDatabase:(id)database query:(id)query;
-(bool)showsSections;
-(bool)isSummarized;
-(bool)shouldBlock;
-(bool)shouldYield;
-(void)searchBar:(id)bar textDidChange:(id)text;
-(void)searchBarSearchButtonClicked:(id)clicked;
-(void)searchBarCancelButtonClicked:(id)clicked;
-(void)searchBarButtonClicked:(id)clicked;
-(void)searchBarTextDidBeginEditing:(id)searchBarText;
-(void)usePrefix:(id)prefix;
-(void)useSearch;
-(id)termsForQuery:(id)query;
-(id)navigationURL;
-(id)referrerURL;
@end

__attribute__((visibility("hidden")))
@interface PackageSettingsController : CyteViewController <UITableViewDataSource, UITableViewDelegate> {
	Database* database_;
	MenesObjectHandle<NSString, 0> name_;
	MenesObjectHandle<Package, 0> package_;
	MenesObjectHandle<UITableView, 2> table_;
	MenesObjectHandle<UISwitch, 0> subscribedSwitch_;
	MenesObjectHandle<UISwitch, 0> ignoredSwitch_;
	MenesObjectHandle<UITableViewCell, 0> subscribedCell_;
	MenesObjectHandle<UITableViewCell, 0> ignoredCell_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)reloadData;
-(id)initWithDatabase:(id)database package:(id)package;
-(void)releaseSubviews;
-(void)viewDidLoad;
-(void)loadView;
-(id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;
-(void)onIgnored:(id)ignored;
-(void)_updateIgnored;
-(void)onSubscribed:(id)subscribed;
-(id)tableView:(id)view titleForFooterInSection:(int)section;
-(id)tableView:(id)view titleForHeaderInSection:(int)section;
-(int)tableView:(id)view numberOfRowsInSection:(int)section;
-(int)numberOfSectionsInTableView:(id)tableView;
-(id)navigationURL;
@end

__attribute__((visibility("hidden")))
@interface InstalledController : FilteredPackageListController {
	bool sectioned_;
}
-(void)modeChanged:(id)changed;
-(void)queueStatusDidChange;
-(void)queueButtonClicked;
-(id)initWithDatabase:(id)database;
-(id)sectionsForPackages:(id)packages;
-(void)useFilter:(id)filter;
-(void)useRecent;
-(id)navigationURL;
-(id)referrerURL;
@end

__attribute__((visibility("hidden")))
@interface SourceCell : CyteTableViewCell <CyteTableViewCellDelegate, SourceDelegate> {
	MenesObjectHandle<Source, 1> source_;
	MenesObjectHandle<NSURL, 0> url_;
	MenesObjectHandle<UIImage, 0> icon_;
	MenesObjectHandle<NSString, 0> origin_;
	MenesObjectHandle<NSString, 0> label_;
	MenesObjectHandle<UIActivityIndicatorView, 0> indicator_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)setFetch:(id)fetch;
-(void)drawContentRect:(CGRect)rect;
-(id)accessibilityLabel;
-(void)layoutSubviews;
-(id)initWithFrame:(CGRect)frame reuseIdentifier:(id)identifier;
-(void)setAllSource;
-(void)setSource:(id)source;
-(void)_setSource:(id)source;
-(void)_setImage:(id)image;
@end

__attribute__((visibility("hidden")))
@interface SourcesController : CyteViewController <UITableViewDataSource, UITableViewDelegate> {
	Database* database_;
	unsigned era_;
	MenesObjectHandle<UITableView, 2> list_;
	MenesObjectHandle<NSMutableArray, 0> sources_;
	int offset_;
	MenesObjectHandle<NSString, 0> href_;
	MenesObjectHandle<UIProgressHUD, 0> hud_;
	MenesObjectHandle<NSError, 0> error_;
	NSURLConnection* trivial_bz2_;
	NSURLConnection* trivial_gz_;
	BOOL cydia_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)editButtonClicked;
-(void)cancelButtonClicked;
-(void)refreshButtonClicked;
-(void)addButtonClicked;
-(void)showAddSourcePrompt;
-(void)reloadData;
-(id)initWithDatabase:(id)database;
-(void)releaseSubviews;
-(void)viewWillAppear:(BOOL)view;
-(void)viewDidLoad;
-(void)loadView;
-(void)updateButtonsForEditingStatusAnimated:(BOOL)editingStatusAnimated;
-(void)alertView:(id)view clickedButtonAtIndex:(int)index;
-(id)_requestHRef:(id)ref method:(id)method;
-(void)connectionDidFinishLoading:(id)connection;
-(void)connection:(id)connection didFailWithError:(id)error;
-(void)connection:(id)connection didReceiveResponse:(id)response;
-(void)_endConnection:(id)connection;
-(id)getWarning;
-(void)complete;
-(void)tableView:(id)view didEndEditingRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view commitEditingStyle:(int)style forRowAtIndexPath:(id)indexPath;
-(BOOL)tableView:(id)view canEditRowAtIndexPath:(id)indexPath;
-(void)tableView:(id)view didSelectRowAtIndexPath:(id)indexPath;
-(id)tableView:(id)view cellForRowAtIndexPath:(id)indexPath;
-(id)sourceAtIndexPath:(id)indexPath;
-(int)tableView:(id)view numberOfRowsInSection:(int)section;
-(id)tableView:(id)view titleForHeaderInSection:(int)section;
-(int)numberOfSectionsInTableView:(id)tableView;
-(void)viewDidAppear:(BOOL)view;
-(id)navigationURL;
-(void)dealloc;
-(void)_releaseConnection:(id)connection;
@end

__attribute__((visibility("hidden")))
@interface StashController : CyteViewController {
	MenesObjectHandle<UIActivityIndicatorView, 0> spinner_;
	MenesObjectHandle<UILabel, 0> status_;
	MenesObjectHandle<UILabel, 0> caption_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)releaseSubviews;
-(void)loadView;
@end

__attribute__((visibility("hidden")))
@interface CYURLCache : SDURLCache {
}
-(void)createDiskCachePath;
-(void)storeCachedResponse:(id)response forRequest:(id)request;
-(void)logEvent:(id)event forRequest:(id)request;
@end

__attribute__((visibility("hidden")))
@interface Cydia : UIApplication <ConfirmationControllerDelegate, DatabaseDelegate, CydiaDelegate> {
	MenesObjectHandle<UIWindow, 0> window_;
	MenesObjectHandle<CydiaTabBarController, 0> tabbar_;
	MenesObjectHandle<CyteTabBarController, 0> emulated_;
	MenesObjectHandle<AppCacheController, 0> appcache_;
	MenesObjectHandle<NSMutableArray, 0> essential_;
	MenesObjectHandle<NSMutableArray, 0> broken_;
	Database* database_;
	MenesObjectHandle<NSURL, 0> starturl_;
	unsigned locked_;
	unsigned activity_;
	MenesObjectHandle<StashController, 0> stash_;
	bool loaded_;
}
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)addProgressEventOnMainThread:(id)thread forTask:(id)task;
-(void)addProgressEventForTask:(id)task;
-(void)addProgressEvent:(id)event forTask:(id)task;
-(void)showActionSheet:(id)sheet fromItem:(id)item;
-(void)loadData;
-(id)defaultStartPages;
-(void)applicationDidFinishLaunching:(id)application;
-(void)applicationDidReceiveMemoryWarning:(id)application;
-(void)_sendMemoryWarningNotifications;
-(void)_sendMemoryWarningNotification;
-(void)setupViewControllers;
-(void)stash;
-(void)removeStashController;
-(void)addStashController;
-(void)setConfigurationData:(id)data;
-(void)applicationWillEnterForeground:(id)application;
-(void)applicationDidEnterBackground:(id)application;
-(void)applicationWillTerminate:(id)application;
-(void)saveState;
-(void)applicationWillResignActive:(id)application;
-(void)applicationOpenURL:(id)url;
-(BOOL)openCydiaURL:(id)url forExternal:(BOOL)external;
-(id)pageForURL:(id)url forExternal:(BOOL)external withReferrer:(id)referrer;
-(id)pageForPackage:(id)package withReferrer:(id)referrer;
-(void)removeProgressHUD:(id)hud;
-(id)addProgressHUD;
-(void)_setSuspended:(BOOL)suspended;
-(void)_animateSuspension:(BOOL)suspension duration:(double)duration startTime:(double)time scale:(float)scale;
-(void)applicationSuspend:(GSEventRef)suspend;
-(void)applicationSuspend;
-(void)suspend;
-(void)suspendReturningToLastApp:(BOOL)lastApp;
-(BOOL)isSafeToSuspend;
-(void)applicationWillSuspend;
-(void)system:(id)system;
-(void)alertView:(id)view clickedButtonAtIndex:(int)index;
-(void)cancelAndClear:(bool)clear;
-(void)releaseNetworkActivityIndicator;
-(void)retainNetworkActivityIndicator;
-(void)confirmWithNavigationController:(id)navigationController;
-(void)perform_;
-(void)uicache;
-(void)_uicache;
-(void)distUpgrade;
-(void)removePackage:(id)package;
-(void)installPackage:(id)package;
-(void)installPackages:(id)packages;
-(void)clearPackage:(id)package;
-(void)queue;
-(bool)perform;
-(void)resolve;
-(BOOL)addTrivialSource:(id)source;
-(void)addSource:(id)source withDistribution:(id)distribution andSections:(id)sections;
-(void)addSource:(id)source;
-(void)syncData;
-(void)reloadData;
-(void)repairWithSelector:(SEL)selector;
-(void)repairWithInvocation:(id)invocation;
-(void)detachNewProgressSelector:(SEL)selector toTarget:(id)target forController:(id)controller title:(id)title;
-(id)invokeNewProgress:(id)progress forController:(id)controller withTitle:(id)title;
-(void)presentModalViewController:(id)controller force:(BOOL)force;
-(void)disemulate;
-(void)update_;
-(void)updateDataAndLoad;
-(void)updateData;
-(void)reloadDataWithInvocation:(id)invocation;
-(void)refreshIfPossible;
-(void)_refreshIfPossible;
-(void)_updateData;
-(void)unloadData;
-(id)queueNavigationController;
-(void)_saveConfig;
-(void)reloadSpringBoard;
-(void)returnToCydia;
-(void)_loaded;
-(BOOL)updating;
-(bool)requestUpdate;
-(void)cancelUpdate;
-(void)beginUpdate;
-(void)unlockSuspend;
-(void)lockSuspend;
@end

@interface NSCachedURLResponse (NSCoder)
-(id)initWithCoder:(id)coder;
-(void)encodeWithCoder:(id)coder;
@end

@interface NSMutableArray (MenesRadixSortWithSelector)
-(void)radixSortUsingSelector:(SEL)selector;
-(void)radixSortUsingFunction:(/*function-pointer*/ void*)function withContext:(void*)context;
@end

@interface NSObject (MenesYieldToSelector)
-(id)yieldToSelector:(SEL)selector;
-(id)yieldToSelector:(SEL)selector withObject:(id)object;
-(void)_yieldToContext:(id)context;
-(void)doNothing;
@end

@interface NSInvocation (MenesInvocationWithSelector)
+(id)invocationWithSelector:(SEL)selector forTarget:(id)target;
@end

@interface UIViewController (Cydia)
-(id)parentOrPresentingViewController;
-(void)unloadData;
-(void)reloadData;
-(BOOL)hasLoaded;
@end

@interface UIWebDocumentView (CyteDispatchEvent)
-(void)dispatchEvent:(id)event;
@end

@interface WebScriptObject (Cyte)
-(unsigned)countByEnumeratingWithState:(XXStruct_kFm5bA*)state objects:(id*)objects count:(unsigned)count;
-(id)objectAtIndex:(unsigned)index;
-(unsigned)count;
@end

@interface NSString (Cyte)
+(id)stringWithUTF8Bytes:(const char*)utf8Bytes length:(int)length;
+(id)stringWithUTF8BytesNoCopy:(const char*)utf8BytesNoCopy length:(int)length;
@end

@interface WebFrame (Cydia)
-(void)cydia$updateHeight;
-(id)description;
@end

@interface UITabBarController (Cydia)
@end

@interface NSDictionary (Cydia)
-(id)invokeUndefinedMethodFromWebScript:(id)webScript withArguments:(id)arguments;
@end

@interface UIWebDocumentView (Cydia)
-(void)_setScrollerOffset:(CGPoint)offset;
@end

@interface NSString (Cydia)
-(id)stringByAddingPercentEscapesIncludingReserved;
-(int)compareByPath:(id)path;
@end

@interface NSURL (CydiaSecure)
-(bool)isCydiaSecure;
@end

@interface NSObject (CydiaScript)
-(id)Cydia$webScriptObjectInContext:(id)context;
@end

@interface NSArray (CydiaScript)
-(id)Cydia$webScriptObjectInContext:(id)context;
@end

@interface NSDictionary (CydiaScript)
-(id)Cydia$webScriptObjectInContext:(id)context;
@end

@interface UINavigationController (Cydia)
-(void)unloadData;
-(void)reloadData;
-(id)navigationURLCollection;
@end

