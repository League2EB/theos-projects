/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "CyteViewController.h"
#import "MFMailComposeViewControllerDelegate.h"
#import "Cydia-Structs.h"
#import "CyteWebViewDelegate.h"
#import "UIWebViewDelegate.h"

@class UIScrollView, NSNumber;

__attribute__((visibility("hidden")))
@interface CyteWebViewController : CyteViewController <CyteWebViewDelegate, MFMailComposeViewControllerDelegate, UIWebViewDelegate> {
	MenesObjectHandle<CyteWebView, 1> webview_;
	UIScrollView* scroller_;
	MenesObjectHandle<UIActivityIndicatorView, 0> indicator_;
	MenesObjectHandle<IndirectDelegate, 1> indirect_;
	MenesObjectHandle<NSURLAuthenticationChallenge, 0> challenge_;
	bool error_;
	MenesObjectHandle<NSURLRequest, 0> request_;
	bool ready_;
	NSNumber* sensitive_;
	MenesObjectHandle<NSURL, 0> appstore_;
	MenesObjectHandle<NSString, 0> title_;
	MenesObjectHandle<NSMutableSet, 0> loading_;
	MenesObjectHandle<NSMutableSet, 0> registered_;
	MenesObjectHandle<NSTimer, 0> timer_;
	MenesObjectHandle<NSObject, 0> custom_;
	MenesObjectHandle<NSString, 0> style_;
	MenesObjectHandle<WebScriptObject, 0> function_;
	float width_;
	Class class_;
	MenesObjectHandle<UIBarButtonItem, 0> reloaditem_;
	MenesObjectHandle<UIBarButtonItem, 0> loadingitem_;
	bool visible_;
	bool hidesNavigationBar_;
	bool allowsNavigationAction_;
}
+(float)defaultWidth;
+(void)_lockJavaScript:(id)script;
+(void)_initialize;
-(id).cxx_construct;
-(void).cxx_destruct;
-(void)registerFrame:(id)frame;
-(void)updateHeights:(id)heights;
-(void)viewDidDisappear:(BOOL)view;
-(void)viewWillDisappear:(BOOL)view;
-(void)viewDidAppear:(BOOL)view;
-(void)viewWillAppear:(BOOL)view;
-(void)setScrollIndicatorStyleWithName:(id)name;
-(void)setScrollIndicatorStyle:(int)style;
-(void)setScrollAlwaysBounceVerticalNumber:(id)number;
-(void)setScrollAlwaysBounceVertical:(bool)vertical;
-(void)setHidesNavigationBarByNumber:(id)number;
-(void)setHidesNavigationBar:(bool)bar;
-(void)_setHidesNavigationBar:(bool)bar animated:(bool)animated;
-(bool)hidesNavigationBar;
-(void)dispatchEvent:(id)event;
-(void)setHidesBackButtonByNumber:(id)number;
-(void)setHidesBackButton:(bool)button;
-(void)setBadgeValue:(id)value;
-(void)setNavigationBarTintColor:(id)color;
-(void)setNavigationBarStyle:(id)style;
-(void)customButtonClicked;
-(void)_customButtonClicked;
-(void)reloadButtonClicked;
-(void)callFunction:(id)function;
-(id)initWithRequest:(id)request;
-(id)initWithURL:(id)url;
-(id)init;
-(id)initWithWidth:(float)width;
-(void)releaseSubviews;
-(void)loadView;
-(id)applicationNameForUserAgent;
-(id)initWithWidth:(float)width ofClass:(Class)aClass;
-(bool)isLoading;
-(void)_didFinishLoading;
-(void)didFinishLoading;
-(void)_didStartLoading;
-(void)didStartLoading;
-(void)applyRightButton;
-(void)layoutRightButton;
-(void)applyLoadingTitle;
-(id)rightButton;
-(void)applyLeftButton;
-(id)leftButton;
-(id)customButton;
-(int)rightButtonStyle;
-(void)alertView:(id)view clickedButtonAtIndex:(int)index;
-(void)close;
-(void)webViewClose:(id)close;
-(bool)webView:(id)view shouldRunJavaScriptTextInputPanelWithPrompt:(id)prompt defaultText:(id)text initiatedByFrame:(id)frame;
-(bool)webView:(id)view shouldRunJavaScriptConfirmPanelWithMessage:(id)message initiatedByFrame:(id)frame;
-(bool)webView:(id)view shouldRunJavaScriptAlertPanelWithMessage:(id)message initiatedByFrame:(id)frame;
-(id)webThreadWebView:(id)view resource:(id)resource willSendRequest:(id)request redirectResponse:(id)response fromDataSource:(id)dataSource;
-(id)webView:(id)view resource:(id)resource willSendRequest:(id)request redirectResponse:(id)response fromDataSource:(id)dataSource;
-(void)webView:(id)view resource:(id)resource didReceiveAuthenticationChallenge:(id)challenge fromDataSource:(id)dataSource;
-(void)webView:(id)view didStartProvisionalLoadForFrame:(id)frame;
-(void)webView:(id)view didReceiveTitle:(id)title forFrame:(id)frame;
-(void)webView:(id)view didFinishLoadForFrame:(id)frame;
-(void)webView:(id)view didFailProvisionalLoadWithError:(id)error forFrame:(id)frame;
-(void)webView:(id)view didFailLoadWithError:(id)error forFrame:(id)frame;
-(void)webView:(id)view didCommitLoadForFrame:(id)frame;
-(void)webView:(id)view didClearWindowObject:(id)object forFrame:(id)frame;
-(void)webView:(id)view decidePolicyForNewWindowAction:(id)newWindowAction request:(id)request newFrameName:(id)name decisionListener:(id)listener;
-(void)webView:(id)view didDecidePolicy:(int)policy forNavigationAction:(id)navigationAction request:(id)request frame:(id)frame;
-(void)webView:(id)view decidePolicyForNavigationAction:(id)navigationAction request:(id)request frame:(id)frame decisionListener:(id)listener;
-(void)webView:(id)view addMessageToConsole:(id)console;
-(void)pushRequest:(id)request forAction:(id)action asPop:(bool)pop;
-(void)_didFailWithError:(id)error forFrame:(id)frame;
-(void)popViewControllerWithNumber:(id)number;
-(void)setAllowsNavigationActionByNumber:(id)number;
-(void)setAllowsNavigationAction:(bool)action;
-(bool)allowsNavigationAction;
-(bool)_allowJavaScriptPanel;
-(void)_openMailToURL:(id)url;
-(void)_setupMail:(id)mail;
-(void)mailComposeController:(id)controller didFinishWithResult:(int)result error:(id)error;
-(void)webViewUpdateViewSettings:(id)settings;
-(void)setViewportWidthOnMainThread:(float)thread;
-(void)_setViewportWidthOnMainThread:(id)thread;
-(void)setViewportWidth:(float)width;
-(void)_setViewportWidth;
-(void)scrollToBottomAnimated:(id)bottomAnimated;
-(void)removeButton;
-(void)setButtonTitle:(id)title withStyle:(id)style toFunction:(id)function;
-(void)setButtonImage:(id)image withStyle:(id)style toFunction:(id)function;
-(void)reloadData;
-(void)reloadURLWithCache:(BOOL)cache;
-(void)loadRequest:(id)request;
-(void)loadURL:(id)url;
-(void)loadURL:(id)url cachePolicy:(unsigned)policy;
-(void)setURL:(id)url withReferrer:(id)referrer;
-(void)setURL:(id)url;
-(void)setRequest:(id)request;
-(id)requestWithURL:(id)url cachePolicy:(unsigned)policy referrer:(id)referrer;
-(id)URLWithURL:(id)url;
-(id)webView;
-(id)description;
-(void)dealloc;
-(void)releaseNetworkActivityIndicator;
-(bool)retainsNetworkActivityIndicator;
@end

