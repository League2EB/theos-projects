/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

typedef struct _NSZone NSZone;

typedef struct CGPoint {
	float _field1;
	float _field2;
} CGPoint;

typedef struct CGSize {
	float _field1;
	float _field2;
} CGSize;

typedef struct CGRect {
	CGPoint _field1;
	CGSize _field2;
} CGRect;

typedef struct _NSRange {
	unsigned _field1;
	unsigned _field2;
} NSRange;

@class UIColor;
template<>
struct MenesObjectHandle<UIColor, 0> {
	UIColor* value_;
};

@class CyteTableViewCellContentView;
template<>
struct MenesObjectHandle<CyteTableViewCellContentView, 1> {
	CyteTableViewCellContentView* value_;
};

@class CyteWebView;
template<>
struct MenesObjectHandle<CyteWebView, 1> {
	CyteWebView* value_;
};

@class UIActivityIndicatorView;
template<>
struct MenesObjectHandle<UIActivityIndicatorView, 0> {
	UIActivityIndicatorView* value_;
};

@class IndirectDelegate;
template<>
struct MenesObjectHandle<IndirectDelegate, 1> {
	IndirectDelegate* value_;
};

@class NSURLAuthenticationChallenge;
template<>
struct MenesObjectHandle<NSURLAuthenticationChallenge, 0> {
	NSURLAuthenticationChallenge* value_;
};

@class NSURLRequest;
template<>
struct MenesObjectHandle<NSURLRequest, 0> {
	NSURLRequest* value_;
};

@class NSURL;
template<>
struct MenesObjectHandle<NSURL, 0> {
	NSURL* value_;
};

@class NSString;
template<>
struct MenesObjectHandle<NSString, 0> {
	NSString* value_;
};

@class NSMutableSet;
template<>
struct MenesObjectHandle<NSMutableSet, 0> {
	NSMutableSet* value_;
};

@class NSTimer;
template<>
struct MenesObjectHandle<NSTimer, 0> {
	NSTimer* value_;
};

@class NSObject;
template<>
struct MenesObjectHandle<NSObject, 0> {
	NSObject* value_;
};

@class WebScriptObject;
template<>
struct MenesObjectHandle<WebScriptObject, 0> {
	WebScriptObject* value_;
};

@class UIBarButtonItem;
template<>
struct MenesObjectHandle<UIBarButtonItem, 0> {
	UIBarButtonItem* value_;
};

@class UIViewController;
template<>
struct MenesObjectHandle<UIViewController, 0> {
	UIViewController* value_;
};

@class UILabel;
template<>
struct MenesObjectHandle<UILabel, 0> {
	UILabel* value_;
};

@class UIView;
template<>
struct MenesObjectHandle<UIView, 0> {
	UIView* value_;
};

@class NSArray;
template<>
struct MenesObjectHandle<NSArray, 0> {
	NSArray* value_;
};

typedef struct _Alloc_hider {
	char* _field1;
} Alloc_hider;

template<>
struct basic_string<char, std::char_traits<char>, std::allocator<char> > {
	Alloc_hider _field1;
};

typedef struct Item Item;

typedef struct ItemDesc {
	basic_string<char, std::char_traits<char>, std::allocator<char> > _field1;
	basic_string<char, std::char_traits<char>, std::allocator<char> > _field2;
	basic_string<char, std::char_traits<char>, std::allocator<char> > _field3;
	Item* _field4;
} ItemDesc;

template<>
struct vector<pkgIndexFile *, std::allocator<pkgIndexFile *> >;

typedef struct metaIndex {
	/*function-pointer*/ void** _field1;
	vector<pkgIndexFile* , std::allocator<pkgIndexFile* > >* _field2;
	char* _field3;
	basic_string<char, std::char_traits<char>, std::allocator<char> > _field4;
	basic_string<char, std::char_traits<char>, std::allocator<char> > _field5;
	bool _field6;
} metaIndex;

typedef struct __CFString* CFStringRef;

typedef struct CYString {
	char* data_;
	unsigned size_;
	CFStringRef cache_;
} CYString;

@class NSMutableDictionary;
template<>
struct MenesObjectHandle<NSMutableDictionary, 0> {
	NSMutableDictionary* value_;
};

template<>
struct less<std::basic_string<char> >;

typedef struct _Rb_tree_node_base {
	int _M_color;
	Rb_tree_node_base* _M_parent;
	Rb_tree_node_base* _M_left;
	Rb_tree_node_base* _M_right;
} Rb_tree_node_base;

template<>
struct _Rb_tree_impl<std::less<std::basic_string<char> >, false> {
	less<std::basic_string<char> > _M_key_compare;
	Rb_tree_node_base _M_header;
	unsigned _M_node_count;
};

template<>
struct _Rb_tree<std::basic_string<char>, std::basic_string<char>, std::_Identity<std::basic_string<char> >, std::less<std::basic_string<char> >, std::allocator<std::basic_string<char> > > {
	_Rb_tree_impl<std::less<std::basic_string<char> >, false> _M_impl;
};

template<>
struct set<std::basic_string<char>, std::less<std::basic_string<char> >, std::allocator<std::basic_string<char> > > {
	_Rb_tree<std::basic_string<char>, std::basic_string<char>, std::_Identity<std::basic_string<char> >, std::less<std::basic_string<char> >, std::allocator<std::basic_string<char> > > _M_t;
};

typedef struct Cleaner Cleaner;

typedef struct CYPool {
	char* data_;
	unsigned size_;
	Cleaner* cleaner_;
} CYPool;

@class CydiaOperation;
template<>
struct MenesObjectHandle<CydiaOperation, 0> {
	CydiaOperation* value_;
};

typedef struct Dependency Dependency;

typedef struct pkgCache pkgCache;

typedef struct DepIterator {
	Dependency* _field1;
	int _field2;
	pkgCache* _field3;
} DepIterator;

@class NSMutableArray;
template<>
struct MenesObjectHandle<NSMutableArray, 0> {
	NSMutableArray* value_;
};

typedef struct Version Version;

typedef struct VerIterator {
	Version* Ver;
	pkgCache* Owner;
} VerIterator;

typedef struct Package Package;

typedef struct PkgIterator {
	Package* Pkg;
	pkgCache* Owner;
	long HashIndex;
} PkgIterator;

typedef struct VerFile VerFile;

typedef struct VerFileIterator {
	pkgCache* Owner;
	VerFile* FileP;
} VerFileIterator;

@class Source;
template<>
struct MenesObjectHandle<Source, 0> {
	Source* value_;
};

template<>
struct Offset<void> {
	unsigned _field1;
};

template<>
struct Offset<PackageValue> {
	unsigned _field1;
};

typedef struct PackageValue {
	Offset<void> _field1;
	Offset<PackageValue> _field2;
	unsigned _field3 : 23;
	unsigned _field4 : 1;
	unsigned _field5 : 8;
	int _field6;
	int _field7;
	unsigned short _field8;
	unsigned short _field9;
	BOOL _field10[8];
	BOOL _field11[0];
} PackageValue;

typedef struct ParsedPackage {
	CYString _field1;
	CYString _field2;
	CYString _field3;
	CYString _field4;
	CYString _field5;
	CYString _field6;
	CYString _field7;
	CYString _field8;
} ParsedPackage;

@class NSDate;
template<>
struct MenesObjectHandle<NSDate, 0> {
	NSDate* value_;
};

typedef struct MMap MMap;

typedef struct pkgDepCache pkgDepCache;

typedef struct pkgPolicy pkgPolicy;

typedef struct pkgCacheFile {
	MMap* Map;
	pkgCache* Cache;
	pkgDepCache* DCache;
	pkgPolicy* Policy;
} pkgCacheFile;

typedef struct Policy {
	/*function-pointer*/ void** _field1;
} Policy;

typedef struct Parser Parser;

typedef struct _Vector_impl {
	Parser** _field1;
	Parser** _field2;
	Parser** _field3;
} Vector_impl;

template<>
struct vector<pkgRecords::Parser *, std::allocator<pkgRecords::Parser *> > {
	Vector_impl _field1;
};

typedef struct pkgRecords {
	pkgCache* _field1;
	vector<pkgRecords::Parser *, std::allocator<pkgRecords::Parser *> > _field2;
} pkgRecords;

typedef struct pkgProblemResolver {
	pkgDepCache* _field1;
	short* _field2;
	char* _field3;
	bool _field4;
} pkgProblemResolver;

typedef struct _Vector_impl {
	Item** _field1;
	Item** _field2;
	Item** _field3;
} Vector_impl;

template<>
struct vector<pkgAcquire::Item *, std::allocator<pkgAcquire::Item *> > {
	Vector_impl _field1;
};

typedef struct Queue Queue;

typedef struct Worker Worker;

typedef struct MethodConfig MethodConfig;

typedef struct pkgAcquireStatus pkgAcquireStatus;

typedef struct pkgAcquire {
	/*function-pointer*/ void** _field1;
	vector<pkgAcquire::Item *, std::allocator<pkgAcquire::Item *> > _field2;
	Queue* _field3;
	Worker* _field4;
	MethodConfig* _field5;
	pkgAcquireStatus* _field6;
	unsigned long _field7;
	int _field8;
	bool _field9;
	bool _field10;
} pkgAcquire;

typedef struct FileFd {
	/*function-pointer*/ void** _field1;
	int _field2;
	unsigned long _field3;
	basic_string<char, std::char_traits<char>, std::allocator<char> > _field4;
} FileFd;

typedef struct pkgPackageManager pkgPackageManager;

template<>
struct SPtr<pkgPackageManager> {
	pkgPackageManager* Ptr;
};

typedef struct _Vector_impl {
	metaIndex** _field1;
	metaIndex** _field2;
	metaIndex** _field3;
} Vector_impl;

template<>
struct vector<metaIndex *, std::allocator<metaIndex *> > {
	Vector_impl _field1;
};

typedef struct pkgSourceList {
	vector<metaIndex *, std::allocator<metaIndex *> > _field1;
} pkgSourceList;

template<>
struct less<unsigned long>;

template<>
struct _Rb_tree_impl<std::less<unsigned long>, false> {
	less<unsigned long> _M_key_compare;
	Rb_tree_node_base _M_header;
	unsigned _M_node_count;
};

template<>
struct _Rb_tree<unsigned long, std::pair<const unsigned long, MenesObjectHandle<Source, 0> >, std::_Select1st<std::pair<const unsigned long, MenesObjectHandle<Source, 0> > >, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, MenesObjectHandle<Source, 0> > > > {
	_Rb_tree_impl<std::less<unsigned long>, false> _M_impl;
};

template<>
struct map<unsigned long, MenesObjectHandle<Source, 0>, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, MenesObjectHandle<Source, 0> > > > {
	_Rb_tree<unsigned long, std::pair<const unsigned long, MenesObjectHandle<Source, 0> >, std::_Select1st<std::pair<const unsigned long, MenesObjectHandle<Source, 0> > >, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, MenesObjectHandle<Source, 0> > > > _M_t;
};

typedef struct __CFArray* CFArrayRef;

typedef struct timeval {
	int tv_sec;
	int tv_usec;
} timeval;

@protocol ProgressDelegate;
typedef struct CydiaStatus {
	/*function-pointer*/ void** _vptr$pkgAcquireStatus;
	timeval Time;
	timeval StartTime;
	double LastBytes;
	double CurrentCPS;
	double CurrentBytes;
	double TotalBytes;
	double FetchedBytes;
	unsigned long ElapsedTime;
	unsigned long TotalItems;
	unsigned long CurrentItems;
	bool Update;
	bool MorePulses;
	bool cancelled_;
	NSObject<ProgressDelegate>* delegate_;
} CydiaStatus;

typedef struct __sbuf {
	char* _field1;
	int _field2;
} sbuf;

typedef struct __sFILEX sFILEX;

typedef struct __sFILE {
	char* _field1;
	int _field2;
	int _field3;
	short _field4;
	short _field5;
	sbuf _field6;
	int _field7;
	void* _field8;
	/*function-pointer*/ void* _field9;
	/*function-pointer*/ void* _field10;
	/*function-pointer*/ void* _field11;
	/*function-pointer*/ void* _field12;
	sbuf _field13;
	sFILEX* _field14;
	int _field15;
	unsigned char _field16[3];
	unsigned char _field17[1];
	sbuf _field18;
	int _field19;
	long long _field20;
} FILE;

template<>
struct less<const char *>;

template<>
struct _Rb_tree_impl<std::less<const char *>, false> {
	less<const char *> _M_key_compare;
	Rb_tree_node_base _M_header;
	unsigned _M_node_count;
};

template<>
struct _Rb_tree<const char *, std::pair<const char *const, MenesObjectHandle<NSString, 0> >, std::_Select1st<std::pair<const char *const, MenesObjectHandle<NSString, 0> > >, std::less<const char *>, std::allocator<std::pair<const char *const, MenesObjectHandle<NSString, 0> > > > {
	_Rb_tree_impl<std::less<const char *>, false> _M_impl;
};

template<>
struct map<const char *, MenesObjectHandle<NSString, 0>, std::less<const char *>, std::allocator<std::pair<const char *const, MenesObjectHandle<NSString, 0> > > > {
	_Rb_tree<const char *, std::pair<const char *const, MenesObjectHandle<NSString, 0> >, std::_Select1st<std::pair<const char *const, MenesObjectHandle<NSString, 0> > >, std::less<const char *>, std::allocator<std::pair<const char *const, MenesObjectHandle<NSString, 0> > > > _M_t;
};

typedef struct CancelStatus {
	/*function-pointer*/ void** _field1;
	timeval _field2;
	timeval _field3;
	double _field4;
	double _field5;
	double _field6;
	double _field7;
	double _field8;
	unsigned long _field9;
	unsigned long _field10;
	unsigned long _field11;
	bool _field12;
	bool _field13;
	bool _field14;
} CancelStatus;

typedef struct PackageFile PackageFile;

typedef struct PkgFileIterator {
	pkgCache* _field1;
	PackageFile* _field2;
} PkgFileIterator;

typedef struct URegularExpression URegularExpression;

typedef struct RegEx {
	URegularExpression* regex_;
	int capture_;
	unsigned size_;
} RegEx;

@class CyteWebViewController;
template<>
struct MenesObjectHandle<CyteWebViewController, 0> {
	CyteWebViewController* value_;
};

@class CydiaObject;
template<>
struct MenesObjectHandle<CydiaObject, 0> {
	CydiaObject* value_;
};

@class UIAlertView;
template<>
struct MenesObjectHandle<UIAlertView, 0> {
	UIAlertView* value_;
};

@class NSDictionary;
template<>
struct MenesObjectHandle<NSDictionary, 0> {
	NSDictionary* value_;
};

@class CydiaProgressData;
template<>
struct MenesObjectHandle<CydiaProgressData, 1> {
	CydiaProgressData* value_;
};

@class UIImage;
template<>
struct MenesObjectHandle<UIImage, 0> {
	UIImage* value_;
};

@class UISwitch;
template<>
struct MenesObjectHandle<UISwitch, 0> {
	UISwitch* value_;
};

@class Package;
template<>
struct MenesObjectHandle<Package, 0> {
	Package* value_;
};

@class UITableView;
template<>
struct MenesObjectHandle<UITableView, 2> {
	UITableView* value_;
};

template<>
struct pair<MenesObjectHandle<NSString, 0>, MenesObjectHandle<NSString, 0> >;

typedef struct _Vector_impl {
	pair<MenesObjectHandle<NSString, 0>, MenesObjectHandle<NSString, 0> >* _M_start;
	pair<MenesObjectHandle<NSString, 0>, MenesObjectHandle<NSString, 0> >* _M_finish;
	pair<MenesObjectHandle<NSString, 0>, MenesObjectHandle<NSString, 0> >* _M_end_of_storage;
} Vector_impl;

template<>
struct vector<std::pair<MenesObjectHandle<NSString, 0>, MenesObjectHandle<NSString, 0> >, std::allocator<std::pair<MenesObjectHandle<NSString, 0>, MenesObjectHandle<NSString, 0> > > > {
	Vector_impl _M_impl;
};

@class UIActionSheet;
template<>
struct MenesObjectHandle<UIActionSheet, 0> {
	UIActionSheet* value_;
};

typedef struct _Vector_impl {
	int* _M_start;
	int* _M_finish;
	int* _M_end_of_storage;
} Vector_impl;

template<>
struct vector<int, std::allocator<int> > {
	Vector_impl _M_impl;
};

typedef struct Abstract Abstract;

template<>
struct Function<bool, Package *> {
	Abstract* abstract_;
};

template<>
struct Function<void, NSMutableArray *> {
	Abstract* abstract_;
};

typedef struct __CFRunLoop* CFRunLoopRef;

typedef struct __SCNetworkReachability* SCNetworkReachabilityRef;

@class UISearchBar;
template<>
struct MenesObjectHandle<UISearchBar, 1> {
	UISearchBar* value_;
};

@class UITableViewCell;
template<>
struct MenesObjectHandle<UITableViewCell, 0> {
	UITableViewCell* value_;
};

template<>
struct MenesObjectHandle<Source, 1> {
	Source* value_;
};

@class UIProgressHUD;
template<>
struct MenesObjectHandle<UIProgressHUD, 0> {
	UIProgressHUD* value_;
};

@class NSError;
template<>
struct MenesObjectHandle<NSError, 0> {
	NSError* value_;
};

@class UIWindow;
template<>
struct MenesObjectHandle<UIWindow, 0> {
	UIWindow* value_;
};

@class CydiaTabBarController;
template<>
struct MenesObjectHandle<CydiaTabBarController, 0> {
	CydiaTabBarController* value_;
};

@class CyteTabBarController;
template<>
struct MenesObjectHandle<CyteTabBarController, 0> {
	CyteTabBarController* value_;
};

@class AppCacheController;
template<>
struct MenesObjectHandle<AppCacheController, 0> {
	AppCacheController* value_;
};

@class StashController;
template<>
struct MenesObjectHandle<StashController, 0> {
	StashController* value_;
};

typedef struct __GSEvent* GSEventRef;

typedef struct {
	unsigned long _field1;
	id* _field2;
	unsigned long* _field3;
	unsigned long _field4[5];
} XXStruct_kFm5bA;


