/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "Cydia-Structs.h"
#import <Foundation/NSObject.h>

@protocol DatabaseDelegate, ProgressDelegate;

__attribute__((visibility("hidden")))
@interface Database : NSObject {
	NSZone* zone_;
	CYPool pool_;
	unsigned era_;
	MenesObjectHandle<NSDate, 0> delock_;
	pkgCacheFile cache_;
	Policy* policy_;
	pkgRecords* records_;
	pkgProblemResolver* resolver_;
	pkgAcquire* fetcher_;
	FileFd* lock_;
	SPtr<pkgPackageManager> manager_;
	pkgSourceList* list_;
	map<unsigned long, MenesObjectHandle<Source, 0>, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, MenesObjectHandle<Source, 0> > > > sourceMap_;
	MenesObjectHandle<NSMutableArray, 0> sourceList_;
	CFArrayRef packages_;
	NSObject<DatabaseDelegate>* delegate_;
	NSObject<ProgressDelegate>* progress_;
	CydiaStatus status_;
	int cydiafd_;
	int statusfd_;
	FILE* input_;
	map<const char *, MenesObjectHandle<NSString, 0>, std::less<const char *>, std::allocator<std::pair<const char *const, MenesObjectHandle<NSString, 0> > > > sections_;
}
+(id)sharedInstance;
-(id).cxx_construct;
-(void).cxx_destruct;
-(id)mappedSectionForPointer:(const char*)pointer;
-(void)resetFetch;
-(void)setFetch:(bool)fetch forURI:(const char*)uri;
-(id)getSource:(PkgFileIterator)source;
-(id)progressDelegate;
-(void)setProgressDelegate:(id)delegate;
-(void)setDelegate:(id)delegate;
-(void)updateWithStatus:(CancelStatus*)status;
-(void)update;
-(bool)upgrade;
-(bool)delocked;
-(void)perform;
-(bool)prepare;
-(bool)clean;
-(void)configure;
-(void)clear;
-(void)reloadDataWithInvocation:(id)invocation;
-(bool)popErrorWithTitle:(id)title forReadList:(pkgSourceList*)readList;
-(bool)popErrorWithTitle:(id)title forOperation:(bool)operation;
-(bool)popErrorWithTitle:(id)title;
-(id)sourceWithKey:(id)key;
-(id)sources;
-(id)packages;
-(pkgSourceList*)list;
-(pkgAcquire*)fetcher;
-(pkgProblemResolver*)resolver;
-(pkgRecords*)records;
-(Policy*)policy;
-(pkgCacheFile*)cache;
-(id)init;
-(id)packageWithName:(id)name;
-(FILE*)input;
-(void)_readOutput:(id)output;
-(void)_readStatus:(id)status;
-(void)_readCydia:(id)cydia;
-(void)dealloc;
-(bool)hasPackages;
-(void)releasePackages;
-(unsigned)era;
@end

