/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "NSURLSessionTaskDelegate.h"
#import "NSURLSessionDataDelegate.h"

@class NSURLCredential, NSOperationQueue, NSString, NSOperation, NSMutableDictionary, NSObject, NSURLSession;
@protocol OS_dispatch_queue;

@interface SDWebImageDownloader : XXUnknownSuperclass <NSURLSessionTaskDelegate, NSURLSessionDataDelegate> {
	BOOL _shouldDecompressImages;
	int _executionOrder;
	NSURLCredential* _urlCredential;
	NSString* _username;
	NSString* _password;
	id _headersFilter;
	NSOperationQueue* _downloadQueue;
	NSOperation* _lastAddedOperation;
	Class _operationClass;
	NSMutableDictionary* _URLCallbacks;
	NSMutableDictionary* _HTTPHeaders;
	NSObject<OS_dispatch_queue>* _barrierQueue;
	NSURLSession* _session;
	double _downloadTimeout;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(copy, nonatomic) id headersFilter;
@property(retain, nonatomic) NSString* password;
@property(retain, nonatomic) NSString* username;
@property(retain, nonatomic) NSURLCredential* urlCredential;
@property(assign, nonatomic) int executionOrder;
@property(assign, nonatomic) double downloadTimeout;
@property(readonly, assign, nonatomic) unsigned currentDownloadCount;
@property(assign, nonatomic) int maxConcurrentDownloads;
@property(assign, nonatomic) BOOL shouldDecompressImages;
@property(retain, nonatomic) NSURLSession* session;
@property(retain, nonatomic) NSObject<OS_dispatch_queue>* barrierQueue;
@property(retain, nonatomic) NSMutableDictionary* HTTPHeaders;
@property(retain, nonatomic) NSMutableDictionary* URLCallbacks;
@property(assign, nonatomic) Class operationClass;
@property(assign, nonatomic) __weak NSOperation* lastAddedOperation;
@property(retain, nonatomic) NSOperationQueue* downloadQueue;
+(id)sharedDownloader;
+(void)initialize;
-(void).cxx_destruct;
-(void)URLSession:(id)session task:(id)task didReceiveChallenge:(id)challenge completionHandler:(id)handler;
-(void)URLSession:(id)session task:(id)task didCompleteWithError:(id)error;
-(void)URLSession:(id)session dataTask:(id)task willCacheResponse:(id)response completionHandler:(id)handler;
-(void)URLSession:(id)session dataTask:(id)task didReceiveData:(id)data;
-(void)URLSession:(id)session dataTask:(id)task didReceiveResponse:(id)response completionHandler:(id)handler;
-(id)operationWithTask:(id)task;
-(void)cancelAllDownloads;
-(void)setSuspended:(BOOL)suspended;
-(void)addProgressCallback:(id)callback completedBlock:(id)block forURL:(id)url createCallback:(id)callback4;
-(id)downloadImageWithURL:(id)url options:(unsigned)options progress:(id)progress completed:(id)completed;
-(id)valueForHTTPHeaderField:(id)httpheaderField;
-(void)setValue:(id)value forHTTPHeaderField:(id)httpheaderField;
-(void)dealloc;
-(id)init;
@end

