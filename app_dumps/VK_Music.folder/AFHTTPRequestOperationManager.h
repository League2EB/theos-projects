/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "NSSecureCoding.h"
#import "NSCopying.h"
#import "VK_Music-Structs.h"

@class AFHTTPRequestSerializer, NSURL, AFHTTPResponseSerializer, NSOperationQueue, NSURLCredential, AFSecurityPolicy, AFNetworkReachabilityManager, NSObject;
@protocol AFURLResponseSerialization, AFURLRequestSerialization, OS_dispatch_queue, OS_dispatch_group;

@interface AFHTTPRequestOperationManager : XXUnknownSuperclass <NSSecureCoding, NSCopying> {
	BOOL _shouldUseCredentialStorage;
	NSURL* _baseURL;
	AFHTTPRequestSerializer<AFURLRequestSerialization>* _requestSerializer;
	AFHTTPResponseSerializer<AFURLResponseSerialization>* _responseSerializer;
	NSOperationQueue* _operationQueue;
	NSURLCredential* _credential;
	AFSecurityPolicy* _securityPolicy;
	AFNetworkReachabilityManager* _reachabilityManager;
	NSObject<OS_dispatch_queue>* _completionQueue;
	NSObject<OS_dispatch_group>* _completionGroup;
}
@property(retain, nonatomic) NSObject<OS_dispatch_group>* completionGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_queue>* completionQueue;
@property(retain, nonatomic) AFNetworkReachabilityManager* reachabilityManager;
@property(retain, nonatomic) AFSecurityPolicy* securityPolicy;
@property(retain, nonatomic) NSURLCredential* credential;
@property(assign, nonatomic) BOOL shouldUseCredentialStorage;
@property(retain, nonatomic) NSOperationQueue* operationQueue;
@property(retain, nonatomic) AFHTTPResponseSerializer<AFURLResponseSerialization>* responseSerializer;
@property(retain, nonatomic) AFHTTPRequestSerializer<AFURLRequestSerialization>* requestSerializer;
@property(retain, nonatomic) NSURL* baseURL;
+(BOOL)supportsSecureCoding;
+(id)manager;
-(void).cxx_destruct;
-(id)copyWithZone:(NSZone*)zone;
-(void)encodeWithCoder:(id)coder;
-(id)initWithCoder:(id)coder;
-(id)description;
-(id)DELETE:(id)aDelete parameters:(id)parameters success:(id)success failure:(id)failure;
-(id)PATCH:(id)patch parameters:(id)parameters success:(id)success failure:(id)failure;
-(id)PUT:(id)put parameters:(id)parameters success:(id)success failure:(id)failure;
-(id)POST:(id)post parameters:(id)parameters constructingBodyWithBlock:(id)block success:(id)success failure:(id)failure;
-(id)POST:(id)post parameters:(id)parameters success:(id)success failure:(id)failure;
-(id)HEAD:(id)head parameters:(id)parameters success:(id)success failure:(id)failure;
-(id)GET:(id)get parameters:(id)parameters success:(id)success failure:(id)failure;
-(id)HTTPRequestOperationWithRequest:(id)request success:(id)success failure:(id)failure;
-(id)HTTPRequestOperationWithHTTPMethod:(id)httpmethod URLString:(id)string parameters:(id)parameters success:(id)success failure:(id)failure;
-(id)initWithBaseURL:(id)baseURL;
-(id)init;
@end

