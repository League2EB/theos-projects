/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "SDWebImageOperation.h"
#import "NSURLSessionTaskDelegate.h"
#import "NSURLSessionDataDelegate.h"

@class NSURLCredential, NSURLSessionTask, NSURLRequest, NSURLResponse, NSMutableData, NSURLSession, NSThread, NSString;

@interface SDWebImageDownloaderOperation : XXUnknownSuperclass <SDWebImageOperation, NSURLSessionTaskDelegate, NSURLSessionDataDelegate> {
	unsigned long width;
	unsigned long height;
	int orientation;
	BOOL responseFromCached;
	BOOL _executing;
	BOOL _finished;
	BOOL _shouldDecompressImages;
	BOOL _shouldUseCredentialStorage;
	NSURLRequest* _request;
	NSURLSessionTask* _dataTask;
	NSURLCredential* _credential;
	unsigned _options;
	int _expectedSize;
	NSURLResponse* _response;
	id _progressBlock;
	id _completedBlock;
	id _cancelBlock;
	NSMutableData* _imageData;
	NSURLSession* _unownedSession;
	NSURLSession* _ownedSession;
	NSThread* _thread;
	unsigned _backgroundTaskId;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(retain, nonatomic) NSURLResponse* response;
@property(assign, nonatomic) int expectedSize;
@property(readonly, assign, nonatomic) unsigned options;
@property(retain, nonatomic) NSURLCredential* credential;
@property(assign, nonatomic) BOOL shouldUseCredentialStorage;
@property(assign, nonatomic) BOOL shouldDecompressImages;
@property(readonly, assign, nonatomic) NSURLRequest* request;
@property(assign, nonatomic) unsigned backgroundTaskId;
@property(retain) NSThread* thread;
@property(retain, nonatomic) NSURLSessionTask* dataTask;
@property(retain, nonatomic) NSURLSession* ownedSession;
@property(assign, nonatomic) __weak NSURLSession* unownedSession;
@property(retain, nonatomic) NSMutableData* imageData;
@property(assign, nonatomic, getter=isFinished) BOOL finished;
@property(assign, nonatomic, getter=isExecuting) BOOL executing;
@property(copy, nonatomic) id cancelBlock;
@property(copy, nonatomic) id completedBlock;
@property(copy, nonatomic) id progressBlock;
+(int)orientationFromPropertyValue:(int)propertyValue;
-(void).cxx_destruct;
-(BOOL)shouldContinueWhenAppEntersBackground;
-(id)scaledImageForKey:(id)key image:(id)image;
-(void)URLSession:(id)session task:(id)task didReceiveChallenge:(id)challenge completionHandler:(id)handler;
-(void)URLSession:(id)session task:(id)task didCompleteWithError:(id)error;
-(void)URLSession:(id)session dataTask:(id)task willCacheResponse:(id)response completionHandler:(id)handler;
-(void)URLSession:(id)session dataTask:(id)task didReceiveData:(id)data;
-(void)URLSession:(id)session dataTask:(id)task didReceiveResponse:(id)response completionHandler:(id)handler;
-(BOOL)isConcurrent;
-(void)reset;
-(void)done;
-(void)cancelInternal;
-(void)cancelInternalAndStop;
-(void)cancel;
-(void)start;
-(id)initWithRequest:(id)request inSession:(id)session options:(unsigned)options progress:(id)progress completed:(id)completed cancelled:(id)cancelled;
-(id)initWithRequest:(id)request options:(unsigned)options progress:(id)progress completed:(id)completed cancelled:(id)cancelled;
@end

