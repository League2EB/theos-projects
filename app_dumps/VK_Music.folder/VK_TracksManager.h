/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library

@class ImageManager, NSString, VK_TrackDownloader, VK_CryptService, VK_TrackFileManager, VK_CoreDataModel, VK_TrackTable, VK_TrackModel, VK_NotificationObserver, NSMutableArray, NSMutableDictionary, NSTimer;
@protocol VK_TracksManagerDelegate, VK_Disposable;

__attribute__((visibility("hidden")))
@interface VK_TracksManager : XXUnknownSuperclass {
	BOOL _enableTracksDownloading;
	BOOL _downloading;
	id<VK_TracksManagerDelegate> _delegate;
	NSString* _contentEncryptionKey;
	VK_CryptService* _cryptService;
	VK_TrackFileManager* _trackFileManager;
	ImageManager* _trackCoversManager;
	VK_TrackDownloader* _downloader;
	VK_CoreDataModel* _dataModel;
	VK_TrackTable* _trackTable;
	VK_TrackModel* _currentTrack;
	VK_NotificationObserver* _notificationObserver;
	id<VK_Disposable> _trackInfoDisposable;
	NSMutableArray* _internalFavoriteTracks;
	NSMutableDictionary* _internalFavoriteIdsTracks;
	NSTimer* _dontSleepIdleTimer;
	NSString* _userId;
}
@property(assign, nonatomic) BOOL enableTracksDownloading;
@property(retain, nonatomic) NSString* contentEncryptionKey;
@property(assign, nonatomic) __weak id<VK_TracksManagerDelegate> delegate;
@property(readonly, assign, nonatomic) NSMutableArray* favoriteTracks;
@property(retain, nonatomic) NSString* userId;
@property(assign, nonatomic) BOOL downloading;
@property(retain, nonatomic) NSTimer* dontSleepIdleTimer;
@property(retain, nonatomic) NSMutableDictionary* internalFavoriteIdsTracks;
@property(retain, nonatomic) NSMutableArray* internalFavoriteTracks;
@property(retain, nonatomic) id<VK_Disposable> trackInfoDisposable;
@property(retain, nonatomic) VK_NotificationObserver* notificationObserver;
@property(retain, nonatomic) VK_TrackModel* currentTrack;
@property(retain, nonatomic) VK_TrackTable* trackTable;
@property(retain, nonatomic) VK_CoreDataModel* dataModel;
@property(retain, nonatomic) VK_TrackDownloader* downloader;
@property(retain, nonatomic) ImageManager* trackCoversManager;
@property(retain, nonatomic) VK_TrackFileManager* trackFileManager;
@property(retain, nonatomic) VK_CryptService* cryptService;
+(BOOL)unsafeIsCanDownloadTrack:(id)track;
-(void).cxx_destruct;
-(BOOL)networkStatusIsValid;
-(BOOL)downloadShouldBeStarted;
-(void)resetDownloading;
-(void)handleDownloadingError:(id)error;
-(void)downloadOnlyByWifiFailed;
-(void)lowMemoryForTracksDownloading;
-(void)updateOnlyDownloadingTracksStatus:(unsigned)status;
-(void)updateDownloadingStatus:(unsigned)status forTrack:(id)track withSaving:(BOOL)saving;
-(void)updateTrackDownloadingState:(id)state forTrack:(id)track withSaving:(BOOL)saving;
-(void)stopDownloading;
-(void)loadLyricsForCurrentTrack;
-(void)loadLyricsForTrack:(id)track withCompletion:(id)completion;
-(void)handleGetMusicUrl:(id)url error:(id)error;
-(void)startDownloading;
-(void)saveTrackData:(id)data data:(id)data2 withCompletion:(id)completion;
-(id)savedTrackData:(id)data;
-(void)deleteTrack:(id)track;
-(void)addTrackIfNeeded:(id)needed withNumber:(unsigned)number;
-(void)syncFavoritesTracks:(id)tracks;
-(void)stopDownloadFavoriteTracks:(id)tracks;
-(void)downloadFavoriteTracks:(id)tracks;
-(BOOL)isCanDownloadTrack:(id)track;
-(BOOL)isCanDownloadFavoriteTrack:(id)track;
-(id)trackModelForId:(id)anId;
-(id)favoriteTrackForTrack:(id)track;
-(void)loadFavoriteTracks;
-(void)reset;
-(void)updateDontSleepWhileDownloadingStatus;
-(void)startDownloadingIfNeeded;
-(id)trackFileDataSource:(id)source;
-(void)handleDownloadFinished:(id)finished success:(BOOL)success;
-(void)stopped:(id)stopped;
-(void)finished:(id)finished;
-(void)progress:(id)progress;
-(void)started:(id)started;
-(void)onTracksStateSavingFailed;
-(void)updateTrackMyAudioState:(BOOL)state forNotification:(id)notification;
-(void)trackRemovedFromMyAudioNotification:(id)myAudioNotification;
-(void)trackAddedToMyAudioNotification:(id)myAudioNotification;
-(void)onApplicationDidBecomeActive;
-(void)onApplicationWillResignActive;
-(void)downloadByWifiStatusChanged;
-(void)downloadingTracksURLsDidChanged;
-(void)dealloc;
-(void)setup_VK_TracksManager;
-(id)initWithUserId:(id)userId;
@end

