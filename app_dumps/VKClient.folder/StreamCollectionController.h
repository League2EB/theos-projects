/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "ModelObserver.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "VKClient-Structs.h"
#import "UICollectionViewDelegateFlowLayout.h"
#import "UICollectionViewDelegate.h"
#import "UICollectionViewDataSource.h"

@class ListModel, ScrollSpeed, NSString, UICollectionView;
@protocol VKMNavDelegate;

__attribute__((visibility("hidden")))
@interface StreamCollectionController : XXUnknownSuperclass <UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout, ModelObserver> {
	BOOL _expanded;
	id<VKMNavDelegate> _delegate;
	ListModel* _model;
	UICollectionView* _collection;
	Class _cellClass;
	ScrollSpeed* _speed;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(readonly, retain, nonatomic) ListModel* model;
@property(readonly, assign, nonatomic) __weak id<VKMNavDelegate> delegate;
@property(assign, nonatomic) BOOL expanded;
@property(readonly, retain, nonatomic) ScrollSpeed* speed;
@property(readonly, assign, nonatomic) Class cellClass;
@property(retain, nonatomic) UICollectionView* collection;
+(id)cellClasses;
-(void).cxx_destruct;
-(id)configureCell:(id)cell atIndexPath:(id)indexPath withModelItem:(id)modelItem;
-(void)collectionView:(id)view willDisplayCell:(id)cell forItemAtIndexPath:(id)indexPath;
-(id)collectionView:(id)view cellForItemAtIndexPath:(id)indexPath;
-(int)collectionView:(id)view numberOfItemsInSection:(int)section;
-(CGSize)collectionView:(id)view layout:(id)layout sizeForItemAtIndexPath:(id)indexPath;
-(void)resizeTableWithFactor:(float)factor;
-(void)scrollViewWillBeginDragging:(id)scrollView;
-(void)scrollViewDidScroll:(id)scrollView;
-(void)model:(id)model willStartLoadingWithContext:(id)context;
-(void)modelLoadingChanged:(id)changed;
-(void)model:(id)model updated:(id)updated;
-(void)bindCollectionToCollectionView:(id)collectionView;
-(void)attach:(id)attach;
-(void)dealloc;
-(id)initWithModel:(id)model delegate:(id)delegate;
@end

