/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "MTRGInstreamAudioAdDelegate.h"

@class NSMutableDictionary, UIImage, VKAdAudioPlayer, NSURLSessionDataTask, BackgroundTaskWrapper, AVQueuePlayer, MainModel, VKAudioQueuePlayerItem, NSString, NSArray, MTRGInstreamAudioAd, VKAudioPlayerModel, MTRGInstreamAudioAdBanner;

__attribute__((visibility("hidden")))
@interface VKAudioQueuePlayer : XXUnknownSuperclass <MTRGInstreamAudioAdDelegate> {
	BOOL _needResume;
	BOOL _active;
	BOOL _wantToPlay;
	VKAdAudioPlayer* _adPlayer;
	AVQueuePlayer* _avPlayer;
	VKAudioQueuePlayerItem* _currentPlayerItem;
	int _state;
	VKAudioPlayerModel* _model;
	UIImage* _coverImage;
	BackgroundTaskWrapper* _task;
	MainModel* _weakMain;
	int _currentAudioAdSection;
	int _adsOnCurrentTrack;
	MTRGInstreamAudioAdBanner* _banner;
	MTRGInstreamAudioAd* _instreamAd;
	NSArray* _midrolAdPositions;
	NSMutableDictionary* _nowPlayingInfo;
	id _observer;
	NSURLSessionDataTask* _coverDownloadTask;
	NSArray* _prevItemsCleaningQueue;
	float _listenedTime;
	double _audioPlayStartTimeForStats;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) float listenedTime;
@property(assign, nonatomic) double audioPlayStartTimeForStats;
@property(retain, nonatomic) NSArray* prevItemsCleaningQueue;
@property(retain, nonatomic) UIImage* coverImage;
@property(retain, nonatomic) NSURLSessionDataTask* coverDownloadTask;
@property(retain, nonatomic) id observer;
@property(retain, nonatomic) NSMutableDictionary* nowPlayingInfo;
@property(retain, nonatomic) NSArray* midrolAdPositions;
@property(retain, nonatomic) MTRGInstreamAudioAd* instreamAd;
@property(retain, nonatomic) MTRGInstreamAudioAdBanner* banner;
@property(retain, nonatomic) VKAudioPlayerModel* model;
@property(assign, nonatomic) BOOL wantToPlay;
@property(assign, nonatomic) BOOL active;
@property(assign, nonatomic) BOOL needResume;
@property(assign, nonatomic) int adsOnCurrentTrack;
@property(assign, nonatomic) int currentAudioAdSection;
@property(assign, nonatomic) int state;
@property(assign, nonatomic) __weak MainModel* weakMain;
@property(retain, nonatomic) VKAudioQueuePlayerItem* currentPlayerItem;
@property(retain, nonatomic) AVQueuePlayer* avPlayer;
@property(retain, nonatomic) VKAdAudioPlayer* adPlayer;
@property(readonly, assign, nonatomic) BackgroundTaskWrapper* task;
-(void).cxx_destruct;
-(id)currentAudio;
-(id)currentPlayer;
-(id)title;
-(id)performer;
-(BOOL)showCover;
-(BOOL)canSkip;
-(BOOL)canSeek;
-(BOOL)isPlayingAd;
-(BOOL)isPlayingOrPausedAd;
-(BOOL)isPlayingOrPaused;
-(BOOL)isPlaying;
-(BOOL)isCurrentItem:(id)item;
-(BOOL)isPlayingItem:(id)item;
-(BOOL)isCurrentAudio:(id)audio;
-(BOOL)isPlayingAudio:(id)audio;
-(void)updateNowPlaying:(id)playing forcePlaybackTime:(BOOL)time;
-(void)updateNowPlaying:(id)playing;
-(int)handleCommandSeekBackward:(id)backward;
-(int)handleCommandSeekForward:(id)forward;
-(int)handleCommandChangePlaybackPosition:(id)position;
-(int)handleCommandPrev:(id)prev;
-(int)handleCommandNext:(id)next;
-(int)handleCommandToggle:(id)toggle;
-(int)handleCommandPause:(id)pause;
-(int)handleCommandPlay:(id)play;
-(void)deattachCommandCenter;
-(void)configureCommandCenter;
-(void)commandCenterSkipCommandsEnable:(BOOL)enable;
-(void)commandCenterSeekCommandsEnable:(BOOL)enable;
-(void)commandCenterPlayPauseCommandsEnable:(BOOL)enable;
-(void)commandCenterCommandsEnable:(BOOL)enable;
-(void)notificationAudioSessioInterruption:(id)interruption;
-(void)routeChanged:(id)changed;
-(void)insertItemAtIndex:(int)index;
-(void)insertNextItemsInQueueIfNeeded;
-(void)notificationComplete:(id)complete;
-(void)resetPlayerFromCurrentItemToItem:(id)item;
-(void)removeAllObserversFrom:(id)from;
-(void)pushToCleaningQueue:(id)cleaningQueue;
-(void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void*)context;
-(id)createMPMediaArtwork;
-(void)handleAssetMetadata;
-(void)notifyUpdateItem;
-(void)notifyUpdateState;
-(void)updateState:(int)state;
-(void)switchTo:(int)to;
-(void)deactivateAudioSession;
-(void)activateAudioSession;
-(void)broadcastCancel;
-(void)broadcast;
-(void)broadcastDelayed:(id)delayed;
-(void)playAfterPreroll;
-(void)playAfterPostroll;
-(void)jumpTo:(int)to;
-(void)previous;
-(void)next;
-(void)skipAuidoAd:(BOOL)ad;
-(void)endRewindFastForward;
-(void)beginFastForward;
-(void)beginRewind;
-(void)seekedTo:(float)to;
-(void)stop;
-(void)toggle;
-(void)pause;
-(void)play;
-(void)repeat:(BOOL)repeat;
-(void)shuffle:(BOOL)shuffle;
-(BOOL)insert:(id)insert at:(unsigned)at context:(int)context playlistIden:(id)iden;
-(BOOL)remove:(unsigned)remove;
-(BOOL)move:(unsigned)move to:(unsigned)to;
-(void)removeAllSaveCurrent;
-(void)resetPlaylistForIndex:(int)index;
-(id)modelFromList:(id)list from:(id)from context:(int)context playlistIden:(id)iden;
-(void)playNext:(id)next context:(int)context playlistIden:(id)iden;
-(void)playList:(id)list from:(id)from context:(int)context playlistIden:(id)iden;
-(void)notificationPurchase:(id)purchase;
-(BOOL)musicSubscriptionActive;
-(BOOL)audioAdAvailable;
-(BOOL)shouldRejectAd:(int)ad;
-(void)playCurrentAfterAd;
-(void)onCompleteWithSection:(id)section instreamAudioAd:(id)ad;
-(void)onLeaveApplicationWithInstreamAudioAd:(id)instreamAudioAd;
-(void)onDismissModalWithInstreamAudioAd:(id)instreamAudioAd;
-(void)onShowModalWithInstreamAudioAd:(id)instreamAudioAd;
-(void)onBannerTimeLeftChange:(double)change duration:(double)duration instreamAudioAd:(id)ad;
-(void)onBannerComplete:(id)complete instreamAudioAd:(id)ad;
-(void)onBannerStart:(id)start instreamAudioAd:(id)ad;
-(void)playAd:(int)ad withPoint:(id)point;
-(void)playAd:(int)ad;
-(void)onErrorWithReason:(id)reason instreamAudioAd:(id)ad;
-(void)onNoAdWithReason:(id)reason instreamAudioAd:(id)ad;
-(void)onLoadWithInstreamAudioAd:(id)instreamAudioAd;
-(void)loadAdAndPlay;
-(void)cancel;
-(void)deactivate;
-(void)activate;
-(void)dealloc;
-(id)initWithMain:(id)main;
@end

